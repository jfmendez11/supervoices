{"version":3,"sources":["serviceWorker.js","components/admin/CreateContest.jsx","components/admin/EditContest.jsx","components/admin/ContestDetails.jsx","components/admin/Home.jsx","components/other/SignIn.jsx","components/contest/Entry.jsx","components/contest/Contest.jsx","components/other/Navigation.jsx","index.js"],"names":["Boolean","window","location","hostname","match","CreateContest","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStartDateChange","date","setState","init_date","handleEndDateChange","end_date","state","openCreate","name","image_path","url","Date","payment","script_path","recommendations_path","selectedFileBanner","selectedFileScript","selectedFileRecommendations","bind","assertThisInitialized","handleCloseCreate","handleInputChange","handleSelectedBannerFile","handleSelectedScriptFile","handleSelectedRecommendationsFile","cleanState","event","target","value","defineProperty","files","_this2","react_default","a","createElement","Dialog_default","style","textAlign","open","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","required","variant","InputLabelProps","shrink","onChange","material_ui_pickers_esm","utils","DateFnsUtils","type","htmlFor","Button_default","component","accept","display","DialogActions_default","onClick","color","newContest","imagePath","initDate","endDate","scriptPath","recommendationsPath","createContest","Component","EditContest","openEdit","handleCloseEdit","handleClickEdit","contest","console","log","editContest","ContestDetails","openDetails","selectedContest","editRef","React","createRef","handleClickDetails","handleCloseDetails","c","current","token","Cookies","get","config","headers","Authorization","_id","NAME","URL","INIT_DATE","END_DATE","PAYMENT","IMAGE_PATH","SCRIPT_PATH","RECOMMENDATIONS_PATH","axios","put","then","res","data","bannerData","FormData","append","post","contestId","onUploadProgress","ProgressEvent","loaded","total","catch","err","scriptData","recommendationsData","renderContests","_this3","admin_EditContest","ref","List_default","ListItem_default","ListItemText_default","primary","secondary","Divider_default","button","href","process","deleteContest","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","classes","theme","className","root","IconButton_default","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","withStyles","flexShrink","palette","text","marginLeft","spacing","unit","withTheme","variantIcon","error","ErrorIcon","MySnackbarContentWrapper","backgroundColor","dark","message","Icon","SnackbarContent_default","classNames","aria-describedby","icon","iconVariant","action","key","close","Close_default","Home","handleChangePage","handleCloseSnack","openSnack","logged","messageErr","renderHome","handleClickCreateContest","createReference","detailsRef","layout","heroUnit","heroContent","Typography_default","align","gutterBottom","paragraph","heroButtons","Grid_default","container","justify","item","Link","to","textDecoration","_this$state","rows","contests","alignItems","borderColor","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","length","slice","map","i","scope","concat","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","ActionsComponent","labelDisplayedRows","_ref","from","_this4","resBanner","resScript","_this5","delete","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","notification","auth","renderSnackbar","admin_CreateContest","admin_ContestDetails","width","marginTop","marginRight","breakpoints","up","createButton","overflowX","minWidth","background","paper","maxWidth","padding","TabContainer","children","SignIn","handleLogin","e","preventDefault","user","email","password","updateAuth","set","path","getContests","updateComponent","handleSignup","lastname","handleUser","handleTabChange","handleChange","repeatPassword","ValidatorForm","addValidationRule","main","CssBaseline_default","Tabs_default","Tab_default","Avatar_default","avatar","LockOutlined_default","lib","onSubmit","onError","errors","fullWidth","validators","errorMessages","FormControl_default","InputLabel_default","Input_default","autoComplete","submit","flexDirection","form","Entry","Fragment","index_es","Card_default","card","md","cardDetails","CardContent_default","entry","LAST_NAME","Chip_default","STATUS","chip","DATE","EMAIL","isAdmin","winner","handleWinner","Stars_default","rightIcon","height","bundle_default","src","URL_ORIGINAL","controls","URL_CONVERTED","flex","leftIcon","iconSmall","fontSize","success","CheckCircleIcon","green","Contest","entries","openSubmit","lastName","selectedFile","showLoading","handleClickSubmitEntry","handleCloseSubmit","renderSubmitDialogue","handleSubmit","handleSelectedFile","getEntries","getContestInfo","renderEntries","pathname","split","ID","userId","USER_ID","toISOString","replace","status","urlOriginal","urlConverted","urlContest","recordData","_this6","WINNER_NAME","currentTarget","WINNER_EMAIL","mainFeaturedPost","sm","xs","mainFeaturedPostContent","link","rel","size","banner","title","alt","_this7","filter","index","contest_Entry","Contest_MySnackbarContentWrapper","handleClose","TransitionComponent","Fade","CircularProgress_default","progress","renderBanner","CloudUpload_default","renderLoading","toolbarMain","borderBottom","grey","toolbarTitle","toolbarSecondary","justifyContent","common","white","marginBottom","paddingRight","mainGrid","maxHeight","linkStyle","Navigation","handleLogout","remove","cookies","AppBar_default","position","Toolbar_default","noWrap","NavLink","exact","Switch","Route","render","admin_Home","Redirect","other_SignIn","contest_Contest","assign","createMuiTheme","typography","useNextVariants","ReactDOM","HashRouter","core_styles","other_Navigation","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yMAYoBA,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,0vBCiOOC,eAvOX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiEVQ,sBAAwB,SAAAC,GACpBR,EAAKS,SAAS,CAACC,UAAWF,KAnEXR,EAsEnBW,oBAAsB,SAAAH,GAClBR,EAAKS,SAAS,CAACG,SAAUJ,KArEzBR,EAAKa,MAAQ,CACTC,YAAY,EACZC,KAAM,GACNC,WAAY,GACZC,IAAK,GACLP,UAAW,IAAIQ,KAAK,cACpBN,SAAU,IAAIM,KAAK,cACnBC,QAAS,EACTC,YAAa,GACbC,qBAAsB,GACtBC,mBAAoB,KACpBC,mBAAoB,KACpBC,4BAA6B,MAEjCxB,EAAKc,WAAad,EAAKc,WAAWW,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAClBA,EAAK2B,kBAAoB3B,EAAK2B,kBAAkBF,KAAvBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACzBA,EAAK4B,kBAAoB5B,EAAK4B,kBAAkBH,KAAvBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACzBA,EAAKO,sBAAwBP,EAAKO,sBAAsBkB,KAA3BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC7BA,EAAKW,oBAAsBX,EAAKW,oBAAoBc,KAAzBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC3BA,EAAK6B,yBAA2B7B,EAAK6B,yBAAyBJ,KAA9BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAChCA,EAAK8B,yBAA2B9B,EAAK8B,yBAAyBL,KAA9BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAChCA,EAAK+B,kCAAoC/B,EAAK+B,kCAAkCN,KAAvCxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACzCA,EAAKgC,WAAahC,EAAKgC,WAAWP,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAxBHA,4EA4BfG,KAAKM,SAAS,CAACK,YAAY,gDAI3BX,KAAKM,SAAS,CAACK,YAAY,IAC3BX,KAAK6B,uDAGSC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfpB,EAAOmB,EAAOnB,KACpBZ,KAAKM,SAALR,OAAAmC,EAAA,EAAAnC,CAAA,GACKc,EAAOoB,qDAISF,GACrB9B,KAAKM,SAAS,CACVa,mBAAoBW,EAAMC,OAAOG,MAAM,GACvCrB,WAAYiB,EAAMC,OAAOG,MAAM,GAAGtB,wDAIjBkB,GACrB9B,KAAKM,SAAS,CACVc,mBAAoBU,EAAMC,OAAOG,MAAM,GACvCjB,YAAaa,EAAMC,OAAOG,MAAM,GAAGtB,iEAITkB,GAC9B9B,KAAKM,SAAS,CACVe,4BAA6BS,EAAMC,OAAOG,MAAM,GAChDhB,qBAAsBY,EAAMC,OAAOG,MAAM,GAAGtB,4CAahDZ,KAAKM,SAAS,CACVM,KAAM,GACNC,WAAY,GACZC,IAAK,GACLP,UAAW,IAAIQ,KAAK,cACpBN,SAAU,IAAIM,KAAK,cACnBC,QAAS,EACTC,YAAa,GACbC,qBAAsB,sCAIrB,IAAAiB,EAAAnC,KACL,OACIoC,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CACIG,MAAO,CAACC,UAAW,UACnBC,KAAM1C,KAAKU,MAAMC,WACjBgC,QAAS3C,KAAKwB,kBACdoB,kBAAgB,qBAEhBR,EAAAC,EAAAC,cAACO,GAAAR,EAAD,CAAaS,GAAG,qBAAhB,kBACAV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACID,EAAAC,EAAAC,cAACU,GAAAX,EAAD,4DAGAD,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIa,WAAS,EACTC,OAAO,QACPvC,KAAK,OACLoB,MAAOhC,KAAKU,MAAME,KAClBwC,MAAM,sBACNC,UAAQ,EACRC,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIc,OAAO,QACPvC,KAAK,MACLoB,MAAOhC,KAAKU,MAAMI,IAClBsC,MAAM,MACNC,UAAQ,EACRC,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CAAyBC,MAAOC,MAC5BxB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACIN,MAAM,eACND,OAAO,QACPvC,KAAK,YACLoB,MAAOhC,KAAKU,MAAMH,UAClB8C,UAAQ,EACRC,QAAQ,WACRG,SAAUzD,KAAKI,wBAEnBgC,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACIN,MAAM,YACND,OAAO,QACPvC,KAAK,WACLoB,MAAOhC,KAAKU,MAAMD,SAClB4C,UAAQ,EACRC,QAAQ,WACRG,SAAUzD,KAAKQ,uBAGvB4B,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIc,OAAO,QACPvC,KAAK,UACLoB,MAAOhC,KAAKU,MAAMM,QAClBoC,MAAM,OACNS,KAAK,SACLR,UAAQ,EACRC,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,eACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,oBAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK0B,yBACfd,KAAK,eACLqD,OAAO,UACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,cACHe,KAAK,SAETzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,eACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,yBAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK2B,yBACff,KAAK,eACLqD,OAAO,0BACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,cACHe,KAAK,SAETzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,cACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,0BAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK4B,kCACfhB,KAAK,wBACLqD,OAAO,0BACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,aACHe,KAAK,WAIjBzB,EAAAC,EAAAC,cAAC6B,GAAA9B,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAKwB,kBAAmB6C,MAAM,WAA/C,YAGAjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAAS,WACL,IAAIE,EAAa,CACb1D,KAAMuB,EAAKzB,MAAME,KACjB2D,UAAWpC,EAAKzB,MAAMG,WACtBC,IAAKqB,EAAKzB,MAAMI,IAChB0D,SAAUrC,EAAKzB,MAAMH,UACrBkE,QAAStC,EAAKzB,MAAMD,SACpBO,QAASmB,EAAKzB,MAAMM,QACpB0D,WAAYvC,EAAKzB,MAAMO,YACvB0D,oBAAqBxC,EAAKzB,MAAMQ,qBAChCC,mBAAoBgB,EAAKzB,MAAMS,mBAC/BC,mBAAoBe,EAAKzB,MAAMU,mBAC/BC,4BAA6Bc,EAAKzB,MAAMW,6BAE5C,OAAOc,EAAKvC,MAAMgF,cAAcN,IAGxCD,MAAM,WAjBV,kBA9MQQ,aCoObC,eAnOX,SAAAA,EAAYlF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,IACfjF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,KAAMJ,KAiEVQ,sBAAwB,SAAAC,GACpBR,EAAKS,SAAS,CAACC,UAAWF,KAnEXR,EAsEnBW,oBAAsB,SAAAH,GAClBR,EAAKS,SAAS,CAACG,SAAUJ,KArEzBR,EAAKa,MAAQ,CACTqE,UAAU,EACVnE,KAAM,GACNC,WAAY,GACZC,IAAK,GACLP,UAAW,IAAIQ,KAAK,cACpBN,SAAU,IAAIM,KAAK,cACnBC,QAAS,EACTC,YAAa,GACbC,qBAAsB,GACtBC,mBAAoB,KACpBC,mBAAoB,KACpBC,4BAA6B,MAEjCxB,EAAKmF,gBAAkBnF,EAAKmF,gBAAgB1D,KAArBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACvBA,EAAKoF,gBAAkBpF,EAAKoF,gBAAgB3D,KAArBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACvBA,EAAK4B,kBAAoB5B,EAAK4B,kBAAkBH,KAAvBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACzBA,EAAKO,sBAAwBP,EAAKO,sBAAsBkB,KAA3BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC7BA,EAAKW,oBAAsBX,EAAKW,oBAAoBc,KAAzBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC3BA,EAAK6B,yBAA2B7B,EAAK6B,yBAAyBJ,KAA9BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAChCA,EAAK8B,yBAA2B9B,EAAK8B,yBAAyBL,KAA9BxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAChCA,EAAK+B,kCAAoC/B,EAAK+B,kCAAkCN,KAAvCxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACzCA,EAAKgC,WAAahC,EAAKgC,WAAWP,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAxBHA,iFA4BfG,KAAKM,SAAS,CAACyE,UAAU,8CAIzB/E,KAAKM,SAAS,CAACyE,UAAU,IACzB/E,KAAK6B,uDAGSC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfpB,EAAOmB,EAAOnB,KACpBZ,KAAKM,SAALR,OAAAmC,EAAA,EAAAnC,CAAA,GACKc,EAAOoB,qDAISF,GACrB9B,KAAKM,SAAS,CACVa,mBAAoBW,EAAMC,OAAOG,MAAM,GACvCrB,WAAYiB,EAAMC,OAAOG,MAAM,GAAGtB,wDAIjBkB,GACrB9B,KAAKM,SAAS,CACVc,mBAAoBU,EAAMC,OAAOG,MAAM,GACvCjB,YAAaa,EAAMC,OAAOG,MAAM,GAAGtB,iEAITkB,GAC9B9B,KAAKM,SAAS,CACVe,4BAA6BS,EAAMC,OAAOG,MAAM,GAChDhB,qBAAsBY,EAAMC,OAAOG,MAAM,GAAGtB,4CAahDZ,KAAKM,SAAS,CACVM,KAAM,GACNC,WAAY,GACZC,IAAK,GACLP,UAAW,IAAIQ,KAAK,cACpBN,SAAU,IAAIM,KAAK,cACnBC,QAAS,EACTC,YAAa,GACbC,qBAAsB,sCAIrB,IAAAiB,EAAAnC,KACL,OACIoC,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CACIK,KAAM1C,KAAKU,MAAMqE,SACjBpC,QAAS3C,KAAKgF,gBACdpC,kBAAgB,qBAEhBR,EAAAC,EAAAC,cAACO,GAAAR,EAAD,CAAaS,GAAG,qBAAhB,sBACAV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACID,EAAAC,EAAAC,cAACU,GAAAX,EAAD,6CAGAD,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIa,WAAS,EACTC,OAAO,QACPvC,KAAK,OACLoB,MAAOhC,KAAKU,MAAME,KAClBwC,MAAM,sBACNE,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIc,OAAO,QACPvC,KAAK,MACLoB,MAAOhC,KAAKU,MAAMI,IAClBsC,MAAM,MACNE,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CAAyBC,MAAOC,MAC5BxB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACIN,MAAM,eACND,OAAO,QACPvC,KAAK,YACLoB,MAAOhC,KAAKU,MAAMH,UAClB8C,UAAQ,EACRC,QAAQ,WACRG,SAAUzD,KAAKI,wBAEnBgC,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACIN,MAAM,YACND,OAAO,QACPvC,KAAK,WACLoB,MAAOhC,KAAKU,MAAMD,SAClB4C,UAAQ,EACRC,QAAQ,WACRG,SAAUzD,KAAKQ,uBAGvB4B,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIc,OAAO,QACPvC,KAAK,UACLoB,MAAOhC,KAAKU,MAAMM,QAClBoC,MAAM,OACNS,KAAK,SACLP,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,eACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,mBAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK0B,yBACfd,KAAK,eACLqD,OAAO,UACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,cACHe,KAAK,SAETzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,eACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,2BAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK2B,yBACff,KAAK,eACLqD,OAAO,0BACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,cACHe,KAAK,SAETzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,cACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,QAAtC,4BAIJ5B,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAK4B,kCACfhB,KAAK,wBACLqD,OAAO,0BACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,aACHe,KAAK,WAIjBzB,EAAAC,EAAAC,cAAC6B,GAAA9B,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAKgF,gBAAiBX,MAAM,WAA7C,YAGAjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAAS,WACT,IAAIc,EAAU,CAEVtE,KAAMuB,EAAKzB,MAAME,KACjB2D,UAAWpC,EAAKzB,MAAMG,WACtBC,IAAKqB,EAAKzB,MAAMI,IAChB0D,SAAUrC,EAAKzB,MAAMH,UACrBkE,QAAStC,EAAKzB,MAAMD,SACpBO,QAASmB,EAAKzB,MAAMM,QACpB0D,WAAYvC,EAAKzB,MAAMO,YACvB0D,oBAAqBxC,EAAKzB,MAAMQ,qBAChCC,mBAAoBgB,EAAKzB,MAAMS,mBAC/BC,mBAAoBe,EAAKzB,MAAMU,mBAC/BC,4BAA6Bc,EAAKzB,MAAMW,6BAG5C,OADA8D,QAAQC,IAAIF,GACL/C,EAAKvC,MAAMyF,YAAYH,IAElCb,MAAM,WAlBV,sBAzMMQ,6FCwLXS,eAnLX,SAAAA,EAAY1F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IACfzF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwF,GAAAnF,KAAAH,KAAMJ,KACDc,MAAQ,CACT6E,aAAa,EACbC,gBAAiB,IAErB3F,EAAK4F,QAAUC,IAAMC,YACrB9F,EAAK+F,mBAAqB/F,EAAK+F,mBAAmBtE,KAAxBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC1BA,EAAKgG,mBAAqBhG,EAAKgG,mBAAmBvE,KAAxBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAC1BA,EAAKwF,YAAcxF,EAAKwF,YAAY/D,KAAjBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACnBA,EAAKoF,gBAAkBpF,EAAKoF,gBAAgB3D,KAArBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAVRA,kFAaAiG,GACf9F,KAAKM,SAAS,CAACiF,aAAa,EAAMC,gBAAiBM,iDAKnD9F,KAAKM,SAAS,CAACiF,aAAa,8CAI5BvF,KAAK6F,qBACL7F,KAAKyF,QAAQM,QAAQd,sDAGbC,GAAS,IAAA/C,EAAAnC,KAEbgG,GADU,IAAIC,KACEC,IAAI,4BACpBC,EAAS,CACTC,QAAS,CAACC,cAAiB,UAAYL,IAG3Cd,EAAQpC,GAAK9C,KAAKU,MAAM8E,gBAAgBc,IACnB,KAAjBpB,EAAQtE,OAAasE,EAAQtE,KAAOZ,KAAKU,MAAM8E,gBAAgBe,MAC/C,KAAhBrB,EAAQpE,MAAYoE,EAAQpE,IAAMd,KAAKU,MAAM8E,gBAAgBgB,KAC7DtB,EAAQV,WAAa,IAAIzD,KAAK,gBAAemE,EAAQV,SAAWxE,KAAKU,MAAM8E,gBAAgBiB,WAC3FvB,EAAQT,UAAY,IAAI1D,KAAK,gBAAemE,EAAQT,QAAUzE,KAAKU,MAAM8E,gBAAgBkB,UACrE,IAApBxB,EAAQlE,UAAekE,EAAQlE,QAAUhB,KAAKU,MAAM8E,gBAAgBmB,SAC9C,KAAtBzB,EAAQX,YAAkBW,EAAQX,UAAYvE,KAAKU,MAAM8E,gBAAgBoB,YAClD,KAAvB1B,EAAQR,aAAmBQ,EAAQR,WAAa1E,KAAKU,MAAM8E,gBAAgBqB,aAC3C,KAAhC3B,EAAQP,sBAA4BO,EAAQP,oBAAsB3E,KAAKU,MAAM8E,gBAAgBsB,sBAEjG9G,KAAKyF,QAAQM,QAAQf,kBACrB+B,IAAMC,IAAI,eAAgB9B,EAASiB,GAC9Bc,KAAK,SAACC,GAEH,OADA/B,QAAQC,IAAI8B,GACLA,EAAIC,OAEdF,KAAK,SAACE,GAEH,GADAhC,QAAQC,IAAI+B,GACuB,OAA/BjC,EAAQ/D,mBAA6B,CACrC,IAAMiG,EAAa,IAAIC,SACvBD,EAAWE,OAAO,OAAQpC,EAAQ/D,mBAAoB+D,EAAQ/D,mBAAmBP,MACjFmG,IAAMQ,KAAK,eAAiBJ,EAAKK,UAAWJ,EAAY,CACpDK,iBAAkB,SAAAC,GACdvF,EAAK7B,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KAEtC6B,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,KAGxB,GAAmC,OAA/B5C,EAAQ9D,mBAA6B,CACrC,IAAM2G,EAAa,IAAIV,SACvBU,EAAWT,OAAO,OAAQpC,EAAQ9D,mBAAoB8D,EAAQ9D,mBAAmBR,MACjFmG,IAAMQ,KAAK,eAAiBJ,EAAKK,UAAWO,EAAY,CACpDN,iBAAkB,SAAAC,GACdvF,EAAK7B,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KAEtC6B,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,KAGxB,GAA4C,OAAxC5C,EAAQ7D,4BAAsC,CAC9C,IAAM2G,EAAsB,IAAIX,SAChCW,EAAoBV,OAAO,OAAQpC,EAAQ7D,4BAA6B6D,EAAQ7D,4BAA4BT,MAC5GmG,IAAMQ,KAAK,uBAAyBJ,EAAKK,UAAWQ,EAAqB,CACrEP,iBAAkB,SAAAC,GACdvF,EAAK7B,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KAEtC6B,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,KAGxB3F,EAAKvC,MAAMqI,mBAEdJ,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,sCAIf,IAAAI,EAAAlI,KACL,OACIoC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6F,GAAD,CAAa9C,YAAarF,KAAKqF,YAAa+C,IAAKpI,KAAKyF,UACtDrD,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CACIK,KAAM1C,KAAKU,MAAM6E,YACjB5C,QAAS3C,KAAK6F,mBACdjD,kBAAgB,qBAEhBR,EAAAC,EAAAC,cAACO,GAAAR,EAAD,CAAaG,MAAO,CAACC,UAAW,UAAWK,GAAG,qBAA9C,YACAV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACID,EAAAC,EAAAC,cAACU,GAAAX,EAAD,8BAC2BrC,KAAKU,MAAM8E,gBAAgBe,MAEtDnE,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,KACID,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,SAASC,UAAWzI,KAAKU,MAAM8E,gBAAgBe,QAEzEnE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,MAAMC,UAAWzI,KAAKU,MAAM8E,gBAAgBgB,OAEtEpE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,kBACRC,UAAWzI,KAAKU,MAAM8E,gBAAgBiB,aAExDrE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,2BACRC,UAAWzI,KAAKU,MAAM8E,gBAAgBkB,YAExDtE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,OAAOC,UAAWzI,KAAKU,MAAM8E,gBAAgBmB,WAEvEvE,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CAAUsG,QAAM,EAAC3E,UAAU,IACjB4E,KAAMC,wBAA0C7I,KAAKU,MAAM8E,gBAAgBoB,WAC3E7E,OAAO,UACbK,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,gBACRC,UAAWzI,KAAKU,MAAM8E,gBAAgBoB,cAExDxE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CAAUsG,QAAM,EAAC3E,UAAU,IACjB4E,KAAMC,wBAA0C7I,KAAKU,MAAM8E,gBAAgBqB,YAC3E9E,OAAO,UACbK,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,wBACRC,UAAWzI,KAAKU,MAAM8E,gBAAgBqB,eAExDzE,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CAAUsG,QAAM,EAAC3E,UAAU,IACjB4E,KAAMC,wBAA0C7I,KAAKU,MAAM8E,gBAAgBsB,qBAC3E/E,OAAO,UACbK,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAcmG,QAAQ,0BACRC,UAAWzI,KAAKU,MAAM8E,gBAAgBsB,0BAIhE1E,EAAAC,EAAAC,cAAC6B,GAAA9B,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAK6F,mBAAoBxB,MAAM,WAAhD,YAGAjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAKiF,gBAAiBZ,MAAM,WAA7C,aAGAjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAAS,kBAAM8D,EAAKtI,MAAMkJ,cAAcZ,EAAKxH,MAAM8E,kBAAkBnB,MAAM,WAAnF,sBA1KKQ,aCsDvBkE,8MACFC,2BAA6B,SAAAlH,GACzBjC,EAAKD,MAAMqJ,aAAanH,EAAO,MAGnCoH,sBAAwB,SAAApH,GACpBjC,EAAKD,MAAMqJ,aAAanH,EAAOjC,EAAKD,MAAMuJ,KAAO,MAGrDC,sBAAwB,SAAAtH,GACpBjC,EAAKD,MAAMqJ,aAAanH,EAAOjC,EAAKD,MAAMuJ,KAAO,MAGrDE,0BAA4B,SAAAvH,GACxBjC,EAAKD,MAAMqJ,aACPnH,EACAwH,KAAKC,IAAI,EAAGD,KAAKE,KAAK3J,EAAKD,MAAM6J,MAAQ5J,EAAKD,MAAM8J,aAAe,6EAIlE,IAAAC,EAC8C3J,KAAKJ,MAAjDgK,EADFD,EACEC,QAASH,EADXE,EACWF,MAAON,EADlBQ,EACkBR,KAAMO,EADxBC,EACwBD,YAAaG,EADrCF,EACqCE,MAE1C,OACIzH,EAAAC,EAAAC,cAAA,OAAKwH,UAAWF,EAAQG,MACpB3H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKgJ,2BACdiB,SAAmB,IAATd,EACVe,aAAW,cAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,MAAkBD,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,OAEnDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKkJ,sBACde,SAAmB,IAATd,EACVe,aAAW,iBAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,MAAwBD,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,OAEzDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKoJ,sBACda,SAAUd,GAAQG,KAAKE,KAAKC,EAAQC,GAAe,EACnDQ,aAAW,aAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,MAAuBD,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,OAExDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKqJ,0BACdY,SAAUd,GAAQG,KAAKE,KAAKC,EAAQC,GAAe,EACnDQ,aAAW,aAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,MAAmBD,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,eAnD/BqD,IAAMb,WA0DrC2F,GAAgCC,sBAlEhB,SAAAZ,GAAK,MAAK,CAC5BE,KAAM,CACFW,WAAY,EACZrG,MAAOwF,EAAMc,QAAQC,KAAKnC,UAC1BoC,WAAiC,IAArBhB,EAAMiB,QAAQC,QA8D8B,CAACC,WAAW,GAAtCP,CAClC1B,IAGEkC,GAAc,CAChBC,MAAOC,MAsCX,IAAMC,GAA2BX,sBAnCjB,SAAAZ,GAAK,MAAK,CACtBqB,MAAO,CACHG,gBAAiBxB,EAAMc,QAAQO,MAAMI,QAiCZb,CA7BjC,SAA2B7K,GAAO,IACvBgK,EAAsChK,EAAtCgK,QAAStG,EAA6B1D,EAA7B0D,QAASX,EAAoB/C,EAApB+C,QAAS4I,EAAW3L,EAAX2L,QAC5BC,EAAOP,GAAY3H,GAEzB,OACIlB,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CACIyH,UAAW4B,KAAW9B,EAAQtG,IAC9BqI,mBAAiB,kBACjBJ,QACInJ,EAAAC,EAAAC,cAAA,QAAMQ,GAAG,kBAAkBgH,UAAWF,EAAQ2B,SAClDnJ,EAAAC,EAAAC,cAACkJ,EAAD,CAAM1B,UAAW4B,KAAW9B,EAAQgC,KAAMhC,EAAQiC,eACzCN,GAGTO,OAAQ,CACJ1J,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI0J,IAAI,QACJ7B,aAAW,QACX7F,MAAM,UACNyF,UAAWF,EAAQoC,MACnB5H,QAASzB,GAETP,EAAAC,EAAAC,cAAC2J,GAAA5J,EAAD,CAAWyH,UAAWF,EAAQgC,aAS5CM,eACF,SAAAA,EAAYtM,GAAO,IAAAuC,EAAA,OAAArC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkM,IACf/J,EAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoM,GAAA/L,KAAAH,KAAMJ,KA8EVuM,iBAAmB,SAACrK,EAAOqH,GACvBhH,EAAK7B,SAAS,CAAC6I,UAhFAhH,EA8RnBiK,iBAAmB,WACfjK,EAAK7B,SAAS,CAAC+L,WAAW,KA7R1BlK,EAAKyH,QAAUhK,EAAMgK,QACrBzH,EAAKzB,MAAQ,CACT4L,QAAQ,EACR3L,YAAY,EACZ4E,aAAa,EACbR,UAAU,EACVS,gBAAiB,GACjB5E,KAAM,GACNC,WAAY,GACZC,IAAK,GACLP,UAAW,IAAIQ,KAAK,cACpBN,SAAU,IAAIM,KAAK,cACnBC,QAAS,EACTC,YAAa,GACbC,qBAAsB,GACtBC,mBAAoB,KACpBC,mBAAoB,KACpBC,4BAA6B,KAC7B8H,KAAM,EACNO,YAAa,GACb2C,WAAW,EACXE,WAAY,IAEhBpK,EAAKyH,QAAUhK,EAAMgK,QACrBzH,EAAKqK,WAAarK,EAAKqK,WAAWlL,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAClBA,EAAK8F,eAAiB9F,EAAK8F,eAAe3G,KAApBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACtBA,EAAKsK,yBAA2BtK,EAAKsK,yBAAyBnL,KAA9BxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAChCA,EAAKyC,cAAgBzC,EAAKyC,cAActD,KAAnBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACrBA,EAAKyD,mBAAqBzD,EAAKyD,mBAAmBtE,KAAxBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAC1BA,EAAK2G,cAAgB3G,EAAK2G,cAAcxH,KAAnBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACrBA,EAAKiK,iBAAmBjK,EAAKiK,iBAAiB9K,KAAtBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACxBA,EAAKuK,gBAAkBhH,IAAMC,YAC7BxD,EAAKwK,WAAajH,IAAMC,YAlCTxD,4EAuCf,OACIC,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQgD,QACzBxK,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQiD,UACzBzK,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQkD,aACzB1K,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,KAAK0J,MAAM,SAAS3I,MAAM,cAAc4I,cAAY,GAAvF,gBAGA7K,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,KAAK0J,MAAM,SAAS3I,MAAM,gBAAgB6I,WAAS,GAAvE,8MAKA9K,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,KAAK0J,MAAM,SAAS3I,MAAM,gBAAgB6I,WAAS,GAAvE,mDAGA9K,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQuD,aACzB/K,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,EAACvC,QAAS,GAAIwC,QAAQ,UACjClL,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,GACNnL,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CAAMC,GAAI,SAAUjL,MAAO,CAACkL,eAAgB,OAAQrJ,MAAO,YACvDjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYe,MAAM,WAAlC,kEA0BnB,IAAA6D,EAAAlI,KAAA2N,EACe3N,KAAKU,MAA1BgJ,EADMiE,EACNjE,YAAaP,EADPwE,EACOxE,KACdyE,EAAO5N,KAAKJ,MAAMiO,SACxB,OACIzL,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQgD,QACzBxK,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,EAACvC,QAAS,EAAGX,UAAU,SAAS2D,WAAW,SAASR,QAAQ,UACvElL,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAKyM,yBAA0BpI,MAAM,UAAUf,QAAQ,aAAxE,mBAIJlB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACuL,YAAa,iBACzB3L,EAAAC,EAAAC,cAAC0L,EAAA3L,EAAD,CAAOyH,UAAW9J,KAAK4J,QAAQG,MAC3B3H,EAAAC,EAAAC,cAAC2L,EAAA5L,EAAD,CAAOyH,UAAW9J,KAAK4J,QAAQsE,OAC3B9L,EAAAC,EAAAC,cAAC6L,EAAA9L,EAAD,KACID,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,KACID,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,yBACAD,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAW2K,MAAM,UAAjB,UACA5K,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAW2K,MAAM,UAAjB,cAGR5K,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,KACKrC,KAAKJ,MAAMiO,SAASU,OAAS,EAAIX,EAAKY,MAAMrF,EAAOO,EAAaP,EAAOO,EAAcA,GAAa+E,IAAI,SAAC3I,EAAG4I,GAAJ,OACnGtM,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAU0J,IAAK2C,GACXtM,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAW2B,UAAU,KAAK2K,MAAM,OAAMvM,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CAAMC,GAAE,aAAAmB,OAAe9I,EAAEU,MAC1DV,EAAEU,MAEPpE,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAW2K,MAAM,UAAUlH,EAAES,MAC7BnE,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAW2K,MAAM,UAAS5K,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAAS,kBAAM8D,EAAKtC,mBAAmBE,IACvCzB,MAAM,UAAUf,QAAQ,aADhC,oBAI7BlB,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,KACDD,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAWwM,QAAS,EAAG7K,UAAU,KAAK2K,MAAM,OAA5C,iDAIRvM,EAAAC,EAAAC,cAACwM,GAAAzM,EAAD,KACID,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,KACID,EAAAC,EAAAC,cAACyM,EAAA1M,EAAD,CACI2M,mBAAoB,CAAC,IACrBH,QAAS,EACTpF,MAAOmE,EAAKW,OACZ7E,YAAaA,EACbP,KAAMA,EACN8F,YAAa,CACTC,QAAQ,GAEZjG,aAAcjJ,KAAKmM,iBACnBgD,iBAAkB3E,GAClB4E,mBAAoB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAM7B,EAAR4B,EAAQ5B,GAAIhE,EAAZ4F,EAAY5F,MAAZ,SAAAmF,OAA0BU,EAA1B,OAAAV,OAAoCnB,EAApC,QAAAmB,OAA6CnF,8DAa7FzJ,KAAK0M,gBAAgB3G,QAAQpF,mDAGnBuE,GAAS,IAAAqK,EAAAvP,KAEfgG,GADU,IAAIC,KACEC,IAAI,4BACpBC,EAAS,CACTC,QAAS,CAACC,cAAiB,UAAYL,IAE3Ce,IAAMQ,KAAK,eAAgBrC,EAASiB,GAC/Bc,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GAGH,GADAhC,QAAQC,IAAI,mBACR+B,EAAKoF,WAGL,OAFAgD,EAAKjP,SAAS,CAACiM,WAAYpF,EAAKoF,kBAChCgD,EAAKjP,SAAS,CAAC+L,WAAW,IAI9BkD,EAAK7C,gBAAgB3G,QAAQvE,oBAE7B,IAAM4F,EAAa,IAAIC,SACvBD,EAAWE,OAAO,OAAQpC,EAAQ/D,mBAAoB+D,EAAQ/D,mBAAmBP,MACjFuE,QAAQC,IAAI,uBACZ2B,IAAMQ,KAAM,eAAiBJ,EAAKb,IAAKc,EAAY,CAC/CK,iBAAkB,SAAAC,GACd6H,EAAKjP,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KACxCiB,KAAK,SAACC,GAEL,OADA/B,QAAQC,IAAI,8BAA+B8B,EAAIC,MACxCD,EAAIC,OACZF,KAAK,SAACuI,GAGLrK,QAAQC,IAAI,eACZ,IAAM2C,EAAa,IAAIV,SACvBU,EAAWT,OAAO,OAAQpC,EAAQ9D,mBAAoB8D,EAAQ9D,mBAAmBR,MACjFmG,IAAMQ,KAAK,eAAiBJ,EAAKb,IAAKyB,EAAY,CAC9CN,iBAAkB,SAAAC,GACd6H,EAAKjP,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KACxCiB,KAAK,SAACC,GAEL,OADA/B,QAAQC,IAAI,8BAA+B8B,EAAIC,MACxCD,EAAIC,OACZF,KAAK,SAACwI,GAGLtK,QAAQC,IAAI,gBACZ,IAAM4C,EAAsB,IAAIX,SAChCW,EAAoBV,OAAO,OAAQpC,EAAQ7D,4BAA6B6D,EAAQ7D,4BAA4BT,MAC5GmG,IAAMQ,KAAK,uBAAyBJ,EAAKb,IAAK0B,EAAqB,CAC/DP,iBAAkB,SAAAC,GACd6H,EAAKjP,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,OAG9DxB,QAAS,CAACC,cAAiB,UAAYL,KACxCiB,KAAK,SAACC,GAGL,OAFA/B,QAAQC,IAAI,6BAA8B8B,EAAIC,MAC9CoI,EAAK3P,MAAMqI,iBACJf,EAAIC,OACZU,MAAM,SAACC,GACN3C,QAAQC,IAAI,WACZD,QAAQC,IAAI0C,OAEjBD,MAAM,SAACC,GACN3C,QAAQC,IAAI,WACZD,QAAQC,IAAI0C,OAEjBD,MAAM,SAACC,GACN3C,QAAQC,IAAI,WACZD,QAAQC,IAAI0C,OAGnBD,MAAM,SAACC,GACJ3C,QAAQC,IAAI,WACZD,QAAQC,IAAI0C,gDAMLhC,GACf9F,KAAK2M,WAAW5G,QAAQH,mBAAmBE,yCAKjCZ,GAAS,IAAAwK,EAAA1P,KAGfmG,EAAS,CACTC,QAAS,CAACC,cAAiB,WAHjB,IAAIJ,KACEC,IAAI,8BAIxBlG,KAAK2M,WAAW5G,QAAQF,qBACxBkB,IAAM4I,OAAO,gBAAkBzK,EAAQoB,IAAKH,GACvCc,KAAK,SAACC,GAEH,OADAwI,EAAK9P,MAAMqI,iBACJf,EAAIC,OAEdU,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,8CAUpB,OACI1F,EAAAC,EAAAC,cAACsN,GAAAvN,EAAD,CACIwN,aAAc,CAACC,SAJR,MAIkBC,WAHhB,UAITrN,KAAM1C,KAAKU,MAAM2L,UACjB1J,QAAS3C,KAAKoM,iBACd4D,iBAAkB,IAClBC,aAAc,CACVtE,mBAAoB,eAGxBvJ,EAAAC,EAAAC,cAAC8I,GAAD,CACIzI,QAAS3C,KAAKoM,iBACd9I,QAAQ,QACRiI,QAASnJ,EAAAC,EAAAC,cAAA,KAAGwH,UAAW9J,KAAK4J,QAAQsG,aAAcpN,GAAG,cAAc9C,KAAKU,MAAM6L,gDAa1F,OACInK,EAAAC,EAAAC,cAAA,WACKtC,KAAKJ,MAAMuQ,KAAOnQ,KAAKiI,iBAAmBjI,KAAKwM,aAC/CxM,KAAKoQ,iBACNhO,EAAAC,EAAAC,cAAC+N,GAAD,CAAezL,cAAe5E,KAAK4E,cAAewD,IAAKpI,KAAK0M,kBAC5DtK,EAAAC,EAAAC,cAACgO,GAAD,CAAgBlI,IAAKpI,KAAK2M,WAAY7D,cAAe9I,KAAK8I,cAAeb,eAAgBjI,KAAKJ,MAAMqI,yBA1SjGpD,aAgTJ4F,yBA/bA,SAAAZ,GAAK,MAAK,CACrB+C,OAAO9M,OAAAmC,EAAA,EAAAnC,CAAA,CACHyQ,MAAO,OACPC,UAAgC,EAArB3G,EAAMiB,QAAQC,KACzBF,WAAiC,EAArBhB,EAAMiB,QAAQC,KAC1B0F,YAAkC,EAArB5G,EAAMiB,QAAQC,MAC1BlB,EAAM6G,YAAYC,GAAG,KAA4B,EAArB9G,EAAMiB,QAAQC,KAAW,GAAK,CACvDwF,MAAO,KACP1F,WAAY,OACZ4F,YAAa,SAGrBG,aAAc,CACVzN,OAAQ,QAEZ4G,KAAM,CACFwG,MAAO,OACPM,UAAW,QAEf3C,MAAO,CACH4C,SAAU,KAEdjE,SAAU,CACNxB,gBAAiBxB,EAAMc,QAAQoG,WAAWC,OAE9ClE,YAAa,CACTmE,SAAU,IACV9N,OAAQ,SACR+N,QAAO,GAAAtC,OAA0B,EAArB/E,EAAMiB,QAAQC,KAAnB,SAAA6D,OAAwD,EAArB/E,EAAMiB,QAAQC,KAAjD,SAmaAN,CAAmByB,kMCtalC,SAASiF,GAAavR,GAClB,OACIwC,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAC0O,QAAS,KAClBtR,EAAMwR,cAKbC,eACF,SAAAA,EAAYzR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqR,IACfxR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuR,GAAAlR,KAAAH,KAAMJ,KAuBV0R,YAAc,SAAAC,GACVA,EAAEC,iBACF,IAAIC,EAAO,CACPC,MAAO7R,EAAKa,MAAMgR,MAClBC,SAAU9R,EAAKa,MAAMiR,UAEzB5K,IAAMQ,KAAK,iBAAkBkK,GACxBxK,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,IACHtH,EAAKS,SAAS,CAACiL,QAASpE,EAAKoE,UAC7B1L,EAAKD,MAAMgS,WAAWzK,EAAKgJ,MACvBhJ,EAAKgJ,SACS,IAAIlK,KACV4L,IAAI,2BAA4B1K,EAAKnB,MAAO,CAAC8L,KAAM,MAC3DjS,EAAKD,MAAMmS,cACXlS,EAAKD,MAAMoS,qBAGlBnK,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,MA7CLjI,EAiDnBoS,aAAe,SAAAV,GACXA,EAAEC,iBAEF,IAAIC,EAAO,CACP7Q,KAAMf,EAAKa,MAAME,KACjBsR,SAAUrS,EAAKa,MAAMwR,SACrBR,MAAO7R,EAAKa,MAAMgR,MAClBC,SAAU9R,EAAKa,MAAMiR,UAEzB5K,IAAMQ,KAAK,kBAAmBkK,GACzBxK,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,IACHtH,EAAKS,SAAS,CAACiL,QAASpE,EAAKoE,UAC7B1L,EAAKD,MAAMgS,WAAWzK,EAAKgJ,MACvBhJ,EAAKgJ,QACS,IAAIlK,KACV4L,IAAI,2BAA4B1K,EAAKnB,MAAO,CAAC8L,KAAM,MAE/DjS,EAAKD,MAAMuS,eAEdtK,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,MAxELjI,EA4EnBuS,gBAAkB,SAACtQ,EAAOE,GACtBnC,EAAKS,SAAS,CAAC0B,WA7EAnC,EAgFnBwS,aAAe,SAACd,GAEZ1R,EAAKS,SAALR,OAAAmC,EAAA,EAAAnC,CAAA,GAESyR,EAAExP,OAAOnB,KAAO2Q,EAAExP,OAAOC,SAlFlCnC,EAAK+J,QAAUhK,EAAMgK,QACrB/J,EAAKa,MAAQ,CACTsB,MAAO,EACPpB,KAAM,GACNsR,SAAU,GACVR,MAAO,GACPC,SAAU,GACVW,eAAgB,GAChB/G,QAAS,MAVE1L,mFAcC,IAAAsC,EAAAnC,KAEhBuS,iBAAcC,kBAAkB,kBAAmB,SAACxQ,GAChD,OAAIA,IAAUG,EAAKzB,MAAMiR,4CAwExB,IACE3P,EAAShC,KAAKU,MAAdsB,MACP,OACII,EAAAC,EAAAC,cAAA,QAAMwH,UAAW9J,KAAK4J,QAAQ6I,MAC1BrQ,EAAAC,EAAAC,cAACoQ,GAAArQ,EAAD,MACAD,EAAAC,EAAAC,cAAC0L,EAAA3L,EAAD,CAAOyH,UAAW9J,KAAK4J,QAAQoH,OAC3B5O,EAAAC,EAAAC,cAACqQ,GAAAtQ,EAAD,CAAML,MAAOA,EAAOyB,SAAUzD,KAAKoS,iBAC/BhQ,EAAAC,EAAAC,cAACsQ,GAAAvQ,EAAD,CAAKe,MAAM,sBACXhB,EAAAC,EAAAC,cAACsQ,GAAAvQ,EAAD,CAAKe,MAAM,kBAEJ,IAAVpB,GAAeI,EAAAC,EAAAC,cAAC6O,GAAD,KACZ/O,EAAAC,EAAAC,cAACuQ,GAAAxQ,EAAD,CAAQyH,UAAW9J,KAAK4J,QAAQkJ,QAC5B1Q,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,OAEJD,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,MAAnC,oBAGAlB,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACIC,SAAUjT,KAAKsR,YACflJ,IAAI,OACJ8K,QAAS,SAAAC,GAAM,OAAIhO,QAAQC,IAAI+N,KAE/B/Q,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,SACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,QACLoB,MAAOhC,KAAKU,MAAMgR,MAClB2B,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,4BAA6B,2CAGjDlR,EAAAC,EAAAC,cAACiR,GAAAlR,EAAD,CAAac,OAAO,SAASE,UAAQ,EAAC+P,WAAS,GAC3ChR,EAAAC,EAAAC,cAACkR,GAAAnR,EAAD,CAAYyB,QAAQ,YAApB,YACA1B,EAAAC,EAAAC,cAACmR,GAAApR,EAAD,CAAOzB,KAAK,WAAWiD,KAAK,WAAWf,GAAG,WAAW4Q,aAAa,mBAC3DjQ,SAAUzD,KAAKqS,gBAE1BjQ,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CACIwB,KAAK,SACLuP,WAAS,EACT9P,QAAQ,YACRe,MAAM,UACNyF,UAAW9J,KAAK4J,QAAQ+J,QAL5B,uBAWG,IAAV3R,GAAeI,EAAAC,EAAAC,cAAC6O,GAAD,KACZ/O,EAAAC,EAAAC,cAACuQ,GAAAxQ,EAAD,CAAQyH,UAAW9J,KAAK4J,QAAQkJ,QAC5B1Q,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,OAEJD,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,MAAnC,iBAGAlB,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACIC,SAAUjT,KAAKiS,aACf7J,IAAI,OACJ8K,QAAS,SAAAC,GAAM,OAAIhO,QAAQC,IAAI+N,KAE/B/Q,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,SACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,OACLoB,MAAOhC,KAAKU,MAAME,KAClByS,WAAY,CAAC,YACbC,cAAe,CAAC,+BAGpBlR,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,WACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,WACLoB,MAAOhC,KAAKU,MAAMwR,SAClBmB,WAAY,CAAC,YACbC,cAAe,CAAC,+BAGpBlR,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,SACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,QACLoB,MAAOhC,KAAKU,MAAMgR,MAClB2B,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,4BAA6B,2CAGjDlR,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,gBACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,WACLiD,KAAK,WACLwP,WAAY,CAAC,YACbC,cAAe,CAAC,6BAChBtR,MAAOhC,KAAKU,MAAMiR,WAEtBvP,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,SACPC,MAAM,gCACNgQ,WAAS,EACT3P,SAAUzD,KAAKqS,aACfzR,KAAK,iBACLiD,KAAK,WACLwP,WAAY,CAAC,kBAAmB,YAChCC,cAAe,CAAC,kCAAgC,6BAChDtR,MAAOhC,KAAKU,MAAM4R,iBAEtBlQ,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CACIwB,KAAK,SACLuP,WAAS,EACT9P,QAAQ,YACRe,MAAM,UACNyF,UAAW9J,KAAK4J,QAAQ+J,QAL5B,8BA9MP9O,aA+NN4F,QAxQA,SAAAZ,GAAK,MAAK,CACrB4I,KAAK3S,OAAAmC,EAAA,EAAAnC,CAAA,CACDyQ,MAAO,OACPrM,QAAS,QACT2G,WAAiC,EAArBhB,EAAMiB,QAAQC,KAC1B0F,YAAkC,EAArB5G,EAAMiB,QAAQC,MAC1BlB,EAAM6G,YAAYC,GAAG,IAA2B,EAArB9G,EAAMiB,QAAQC,KAAW,GAAK,CACtDwF,MAAO,IACP1F,WAAY,OACZ4F,YAAa,SAGrBO,MAAO,CACHR,UAAgC,EAArB3G,EAAMiB,QAAQC,KACzB7G,QAAS,OACT0P,cAAe,SACf9F,WAAY,SACZoD,QAAO,GAAAtC,OAA0B,EAArB/E,EAAMiB,QAAQC,KAAnB,OAAA6D,OAAsD,EAArB/E,EAAMiB,QAAQC,KAA/C,OAAA6D,OAAkF,EAArB/E,EAAMiB,QAAQC,KAA3E,MACPtI,UAAW,UAEfqQ,OAAQ,CACJ3P,OAAQ,OACRkI,gBAAiBxB,EAAMc,QAAQlC,UAAUgK,MAE7CoB,KAAM,CACFtD,MAAO,OACPC,UAAW3G,EAAMiB,QAAQC,MAE7B4I,OAAQ,CACJnD,UAAgC,EAArB3G,EAAMiB,QAAQC,QA2OlBN,CAAmB4G,qLCvP5ByC,eACF,SAAAA,EAAYlU,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8T,IACfjU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgU,GAAA3T,KAAAH,KAAMJ,KACDgK,QAAUhK,EAAMgK,QAFN/J,wEAMf,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM0R,SAAP,KAEI3R,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACI5R,EAAAC,EAAAC,cAAC2R,GAAA5R,EAAD,CAAMyH,UAAW9J,KAAK4J,QAAQsK,MAC1B9R,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAAC4G,GAAI,GACX/R,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQwK,aACzBhS,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,KACID,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,MAC9BtD,KAAKJ,MAAM0U,MAAM/N,KAAO,IAAMvG,KAAKJ,MAAM0U,MAAMC,UAChDnS,EAAAC,EAAAC,cAACkS,GAAAnS,EAAD,CAAMe,MAAOpD,KAAKJ,MAAM0U,MAAMG,OACxBpQ,MAAmC,eAA5BrE,KAAKJ,MAAM0U,MAAMG,OAA0B,UAAY,YAC9D3K,UAAW9J,KAAK4J,QAAQ8K,QAElCtS,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,YAAYe,MAAM,iBACjCrE,KAAKJ,MAAM0U,MAAMK,MAEtBvS,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,aACftD,KAAKJ,MAAM0U,MAAMM,OAErB5U,KAAKJ,MAAMiV,WAAgC,MAAnB7U,KAAKJ,MAAMkV,OAChC1S,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYtB,MAAOhC,KAAKJ,MAAM0U,MAAMM,MAC5ChU,KAAI,GAAAgO,OAAK5O,KAAKJ,MAAM0U,MAAM/N,KAAtB,KAAAqI,OAA8B5O,KAAKJ,MAAM0U,MAAMC,WACnDlQ,MAAM,UACNyF,UAAW9J,KAAK4J,QAAQjB,OAAQvE,QAASpE,KAAKJ,MAAMmV,cAH5D,aAKI3S,EAAAC,EAAAC,cAAC0S,GAAA3S,EAAD,CAAWyH,UAAW9J,KAAK4J,QAAQqL,aAErC,MAIjBjV,KAAKJ,MAAMiV,UACRzS,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAAC4G,GAAI,GACX/R,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMG,MAAO,CAAC0S,OAAQ,QAAS7H,WAAS,EAAClD,UAAU,SAAS2D,WAAW,SACjER,QAAQ,UACVlL,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,MAAnC,gBACAlB,EAAAC,EAAAC,cAAC6S,GAAA9S,EAAD,CACI+S,IAAMpV,KAAKJ,MAAM0U,MAAMe,aACvBC,UAAQ,MAInB,GACwB,eAA5BtV,KAAKJ,MAAM0U,MAAMG,OACdrS,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAAC4G,GAAInU,KAAKJ,MAAMiV,UAAU,EAAE,GAClCzS,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMG,MAAO,CAAC0S,OAAQ,QAAS7H,WAAS,EAAClD,UAAU,SAAS2D,WAAW,SACjER,QAAQ,UACVlL,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,MAAnC,kBACAlB,EAAAC,EAAAC,cAAC6S,GAAA9S,EAAD,CACI+S,IAAKpV,KAAKJ,MAAM0U,MAAMiB,cACtBD,UAAQ,MAGV,aA7DlBzQ,aAsEL4F,yBAhGA,SAAAZ,GAAK,MAAK,CACrBqK,KAAM,CACFhQ,QAAS,OACTf,OAAQ,YAEZiR,YAAa,CACToB,KAAM,GAEV7M,OAAQ,CACJxF,OAAQ0G,EAAMiB,QAAQC,MAE1B0K,SAAU,CACNhF,YAAa5G,EAAMiB,QAAQC,MAE/BkK,UAAW,CACPpK,WAAYhB,EAAMiB,QAAQC,MAE9B2K,UAAW,CACPC,SAAU,IAEdjB,KAAM,CACFvR,OAAQ0G,EAAMiB,QAAQC,QA2EfN,CAAmBqJ,6CCZ5B7I,GAAc,CAChB2K,QAASC,MAgCb,IAMMzK,GAA2BX,sBANjB,SAAAZ,GAAK,MAAK,CACtB+L,QAAS,CACLvK,gBAAiByK,KAAM,QAIErL,CAnCjC,SAA2B7K,GAAO,IACvBgK,EAAsChK,EAAtCgK,QAAStG,EAA6B1D,EAA7B0D,QAASX,EAAoB/C,EAApB+C,QAAS4I,EAAW3L,EAAX2L,QAC5BC,EAAOP,GAAY3H,GAEzB,OACIlB,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CACIyH,UAAW4B,KAAW9B,EAAQtG,IAC9BqI,mBAAiB,kBACjBJ,QACInJ,EAAAC,EAAAC,cAAA,QAAMQ,GAAG,kBAAkBgH,UAAWF,EAAQ2B,SAClDnJ,EAAAC,EAAAC,cAACkJ,EAAD,CAAM1B,UAAW4B,KAAW9B,EAAQgC,KAAMhC,EAAQiC,eACzCN,GAGTO,OAAQ,CACJ1J,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI0J,IAAI,QACJ7B,aAAW,QACX7F,MAAM,UACNyF,UAAWF,EAAQoC,MACnB5H,QAASzB,GAETP,EAAAC,EAAAC,cAAC2J,GAAA5J,EAAD,CAAWyH,UAAWF,EAAQgC,aAuB5C7C,8MACFC,2BAA6B,SAAAlH,GACzBjC,EAAKD,MAAMqJ,aAAanH,EAAO,MAGnCoH,sBAAwB,SAAApH,GACpBjC,EAAKD,MAAMqJ,aAAanH,EAAOjC,EAAKD,MAAMuJ,KAAO,MAGrDC,sBAAwB,SAAAtH,GACpBjC,EAAKD,MAAMqJ,aAAanH,EAAOjC,EAAKD,MAAMuJ,KAAO,MAGrDE,0BAA4B,SAAAvH,GACxBjC,EAAKD,MAAMqJ,aACPnH,EACAwH,KAAKC,IAAI,EAAGD,KAAKE,KAAK3J,EAAKD,MAAM6J,MAAQ5J,EAAKD,MAAM8J,aAAe,6EAIlE,IAAAC,EAC8C3J,KAAKJ,MAAjDgK,EADFD,EACEC,QAASH,EADXE,EACWF,MAAON,EADlBQ,EACkBR,KAAMO,EADxBC,EACwBD,YAAaG,EADrCF,EACqCE,MAE1C,OACIzH,EAAAC,EAAAC,cAAA,OAAKwH,UAAWF,EAAQG,MACpB3H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKgJ,2BACdiB,SAAmB,IAATd,EACVe,aAAW,cAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,MAAkBD,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,OAEnDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKkJ,sBACde,SAAmB,IAATd,EACVe,aAAW,iBAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,MAAwBD,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,OAEzDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKoJ,sBACda,SAAUd,GAAQG,KAAKE,KAAKC,EAAQC,GAAe,EACnDQ,aAAW,aAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,MAAuBD,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,OAExDD,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CACI+B,QAASpE,KAAKqJ,0BACdY,SAAUd,GAAQG,KAAKE,KAAKC,EAAQC,GAAe,EACnDQ,aAAW,aAEU,QAApBL,EAAMM,UAAsB/H,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,MAAmBD,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,eAnD/BqD,IAAMb,WA0DrC2F,GAAgCC,sBAlEhB,SAAAZ,GAAK,MAAK,CAC5BE,KAAM,CACFW,WAAY,EACZrG,MAAOwF,EAAMc,QAAQC,KAAKnC,UAC1BoC,WAAiC,IAArBhB,EAAMiB,QAAQC,QA8D8B,CAACC,WAAW,GAAtCP,CAClC1B,IAIEgN,eACF,SAAAA,EAAYnW,GAAO,IAAAuC,EAAA,OAAArC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+V,IACf5T,EAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiW,GAAA5V,KAAAH,KAAMJ,KAyTVuM,iBAAmB,SAACrK,EAAOqH,GACvBhH,EAAK7B,SAAS,CAAC6I,UA3TAhH,EAqZnBiK,iBAAmB,WACfjK,EAAK7B,SAAS,CAAC+L,WAAW,KApZ1BlK,EAAKyH,QAAUhK,EAAMgK,QACrBzH,EAAKzB,MAAQ,CACTwE,QAAS,GACT8Q,QAAS,GACTC,YAAY,EACZrV,KAAM,GACNsV,SAAU,GACVxE,MAAO,GACPyE,aAAc,KACdzT,MAAM,EACN2J,WAAW,EACXyD,SAAU,MACVC,WAAY,SACZ5G,KAAM,EACNO,YAAa,GACb0M,aAAa,GAEjBjU,EAAKkU,uBAAyBlU,EAAKkU,uBAAuB/U,KAA5BxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAC9BA,EAAKmU,kBAAoBnU,EAAKmU,kBAAkBhV,KAAvBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACzBA,EAAKoU,qBAAuBpU,EAAKoU,qBAAqBjV,KAA1BxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAC5BA,EAAKV,kBAAoBU,EAAKV,kBAAkBH,KAAvBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACzBA,EAAKqU,aAAerU,EAAKqU,aAAalV,KAAlBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACpBA,EAAKsU,mBAAqBtU,EAAKsU,mBAAmBnV,KAAxBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAC1BA,EAAK4S,aAAe5S,EAAK4S,aAAazT,KAAlBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACpBA,EAAKuU,WAAavU,EAAKuU,WAAWpV,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IAClBA,EAAKwU,eAAiBxU,EAAKwU,eAAerV,KAApBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACtBA,EAAKyU,cAAgBzU,EAAKyU,cAActV,KAAnBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACrBA,EAAKiK,iBAAmBjK,EAAKiK,iBAAiB9K,KAAtBxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IACxBA,EAAK0S,QAAU1S,EAAK0S,QAAQvT,KAAbxB,OAAAyB,EAAA,EAAAzB,CAAAqC,IA9BAA,mFAkCfnC,KAAK2W,iBACL3W,KAAK0W,sDAGQ,IAAAxO,EAAAlI,KACb+G,IAAMb,IAAN,gBAAA0I,OAA0B5O,KAAKJ,MAAMJ,SAASqX,SAASC,MAAM,KAAK,KAC7D7P,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHe,EAAK5H,SAAS,CAAC4E,QAASiC,EAAK,IAAK,WAC1Be,EAAKxH,MAAMwE,QACX6B,IAAMb,IAAN,cAAA0I,OAAwB1G,EAAKxH,MAAMwE,QAAQsB,MACtCS,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHe,EAAK5H,SAAS,CAAC0V,QAAS7O,MAE3BU,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,KAGpBI,EAAK5H,SAAS,CAAC4E,QAAS,SAInC2C,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,0CAIX,IAAAyH,EAAAvP,KACLA,KAAKU,MAAMwE,QAAQ6R,IACnBhQ,IAAMb,IAAN,cAAA0I,OAAwB5O,KAAKU,MAAMwE,QAAQ6R,KACtC9P,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHoI,EAAKjP,SAAS,CAAC0V,QAAS7O,MAE3BU,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,sDAMxB9H,KAAKM,SAAS,CAAC2V,YAAY,gDAI3BjW,KAAK6B,aACL7B,KAAKM,SAAS,CACV2V,YAAY,8CAIFnU,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfpB,EAAOmB,EAAOnB,KACpBZ,KAAKM,SAALR,OAAAmC,EAAA,EAAAnC,CAAA,GACKc,EAAOoB,2CAID,IAAA0N,EAAA1P,KACLsU,EAAQ,CACV9M,UAAWxH,KAAKU,MAAMwE,QAAQoB,IAC9B0Q,OAAQhX,KAAKU,MAAMwE,QAAQ+R,QAC3BrW,KAAMZ,KAAKU,MAAME,KACjBsV,SAAUlW,KAAKU,MAAMwV,SACrB7V,MAAM,IAAIU,MAAOmW,cAAc1I,MAAM,EAAG,IAAI2I,QAAQ,IAAK,KACzDzF,MAAO1R,KAAKU,MAAMgR,MAClB0F,OAAQ,gBACRC,YAAa,GACbC,aAAc,GACdC,WAAYvX,KAAKU,MAAMwE,QAAQsB,KAInCO,IAAMQ,KAAK,aAAc+M,GACpBrN,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACH,IAAMqQ,EAAa,IAAInQ,SACvBmQ,EAAWlQ,OAAO,OAAQoI,EAAKhP,MAAMyV,aAAczG,EAAKhP,MAAMyV,aAAavV,MAC3EmG,IAAMQ,KAAK,kBAAoBJ,EAAK8P,QAAU,IAAMvH,EAAKhP,MAAMwE,QAAQoB,IAAM,IAAMa,EAAKb,IAAKkR,EAAY,CACrG/P,iBAAkB,SAAAC,GACdgI,EAAKpP,SAAS,CAAC8V,aAAa,IAC5B1G,EAAKpP,SAAS,CACVqH,OAASD,EAAcC,OAASD,EAAcE,MAAQ,SAG/DX,KAAK,SAAAC,GACJwI,EAAKpP,SAAS,CAAC8V,aAAa,EAAO/J,WAAW,IAC9CqD,EAAKgH,eACN7O,MAAM,SAACC,GACN3C,QAAQC,IAAI0C,OAGnBD,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,KAGpB9H,KAAKM,SAAS,CAAC2V,YAAY,IAC3BjW,KAAK6B,wDAGUC,GACf9B,KAAKM,SAAS,CACV6V,aAAcrU,EAAMC,OAAOG,MAAM,0CAI5BqP,GAAG,IAAAkG,EAAAzX,KACZuR,EAAEC,iBACF,IAAItM,EAAUlF,KAAKU,MAAMwE,QACzBA,EAAQwS,YAAcnG,EAAEoG,cAAc/W,KACtCsE,EAAQ0S,aAAerG,EAAEoG,cAAc3V,MAEvC,IAEImE,EAAS,CACTC,QAAS,CAACC,cAAiB,WAHjB,IAAIJ,KACEC,IAAI,8BAKxBa,IAAMC,IAAI,sBAAuB9B,EAASiB,GACrCc,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHsQ,EAAKd,iBACLc,EAAKf,eAER7O,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,oDAKpB,OACI1F,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CACIG,MAAO,CAACC,UAAW,UACnBC,KAAM1C,KAAKU,MAAMuV,WACjBtT,QAAS3C,KAAKsW,kBACd1T,kBAAgB,qBAEhBR,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACIC,SAAUjT,KAAKwW,aACfpO,IAAI,OACJ8K,QAAS,SAAAC,GAAM,OAAIhO,QAAQC,IAAI+N,KAE/B/Q,EAAAC,EAAAC,cAACO,GAAAR,EAAD,CAAaS,GAAG,qBAAhB,6BACAV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACID,EAAAC,EAAAC,cAACU,GAAAX,EAAD,kEAGAD,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIa,WAAS,EACTC,OAAO,QACPvC,KAAK,OACLoB,MAAOhC,KAAKU,MAAME,KAClBwC,MAAM,UACNC,UAAQ,EACRC,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,CACIc,OAAO,QACPvC,KAAK,WACLoB,MAAOhC,KAAKU,MAAMwV,SAClB9S,MAAM,YACNC,UAAQ,EACRC,QAAQ,WACRC,gBAAiB,CACbC,QAAQ,GAEZC,SAAUzD,KAAKyB,oBAEnBW,EAAAC,EAAAC,cAAC0Q,GAAA,cAAD,CACI7P,OAAO,QACPC,MAAM,QACNE,QAAQ,WACRG,SAAUzD,KAAKyB,kBACfb,KAAK,QACLoB,MAAOhC,KAAKU,MAAMgR,MAClB2B,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,yBAA0B,wBAE9ClR,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,eACX1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAYU,UAAU,OAAO8F,UAAW9J,KAAK4J,QAAQjB,QAArE,kBAIJvG,EAAAC,EAAAC,cAAA,SACImB,SAAUzD,KAAKyW,mBACfxS,OAAO,UACPzB,MAAO,CAAC0B,QAAS,QACjBpB,GAAG,cACHe,KAAK,UAGbzB,EAAAC,EAAAC,cAAC6B,GAAA9B,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ+B,QAASpE,KAAKsW,kBAAmBjS,MAAM,WAA/C,YAGAjC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQwB,KAAK,SAASQ,MAAM,WAA5B,mDAUhB,OACIjC,EAAAC,EAAAC,cAAC0L,EAAA3L,EAAD,CAAOyH,UAAW9J,KAAK4J,QAAQiO,kBAC3BzV,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,GACXjL,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAAC4G,GAAI,EAAG2D,GAAI,EAAGC,GAAI,IACzB3V,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQoO,yBACzB5V,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAY2B,UAAU,KAAKV,QAAQ,KAAKe,MAAM,UAAU4I,cAAY,GAC/DjN,KAAKU,MAAMwE,QAAQqB,MAExBnE,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,KAAKe,MAAM,UAAU6I,WAAS,GAAlD,WACalN,KAAKU,MAAMwE,QAAQyB,SAEG,MAAlC3G,KAAKU,MAAMwE,QAAQwS,YAChBtV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,KAAKe,MAAM,UAAU6I,WAAS,GAAlD,YACclN,KAAKU,MAAMwE,QAAQwS,YAAc,KAAO1X,KAAKU,MAAMwE,QAAQ0S,aAAe,MAG1F,GACNxV,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,EAAClD,UAAU,MAAMmD,QAAQ,iBACpClL,EAAAC,EAAAC,cAAA,KAAGwH,UAAW9J,KAAK4J,QAAQqO,KACxBrP,KAAM5I,KAAKU,MAAMwE,QAAQ2B,YACzB9E,OAAO,SAASmW,IAAI,uBACnB9V,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAY6U,KAAK,QAAQ9T,MAAM,WAA/C,mBAEJjC,EAAAC,EAAAC,cAAA,KAAGwH,UAAW9J,KAAK4J,QAAQqO,KACxBrP,KAAM5I,KAAKU,MAAMwE,QAAQ4B,qBACzB/E,OAAO,SAASmW,IAAI,uBACnB9V,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAY6U,KAAK,QAAQ9T,MAAM,WAA/C,uBAKhBjC,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAAC4G,GAAI,EAAG2D,GAAI,EAAGC,GAAI,IACzB3V,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMG,MAAO,CAAC0S,OAAQ,QAAS7H,WAAS,EAACS,WAAW,SAASR,QAAQ,UACjElL,EAAAC,EAAAC,cAAA,OACIwH,UAAW9J,KAAK4J,QAAQwO,OACxBhD,IACIpV,KAAKU,MAAMwE,QAAQ0B,WACf5G,KAAKU,MAAMwE,QAAQ0B,WACjB,8DACVyR,MAAM,cACNC,IAAI,4DAU5BtY,KAAKM,SAAS,CACVM,KAAM,GACNsV,SAAU,GACVxE,MAAO,6CAQC,IAAA6G,EAAAvY,KAAA2N,EACgB3N,KAAKU,MAA1BgJ,EADKiE,EACLjE,YAAaP,EADRwE,EACQxE,KAChByE,EAAO5N,KAAKU,MAAMsV,QAEtB,OADKhW,KAAK6U,YAAWjH,EAAOA,EAAK4K,OAAO,SAAClE,GAAD,MAA4B,eAAjBA,EAAMG,UAErDrS,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,EAACvC,QAAS,IACrB1I,EAAAC,EAAAC,cAAC2L,EAAA5L,EAAD,KACID,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACI5R,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,KACID,EAAAC,EAAAC,cAACyM,EAAA1M,EAAD,CACI2M,mBAAoB,CAAC,IACrBH,QAAS,EACTpF,MAAOmE,EAAKW,OACZ7E,YAAaA,EACbP,KAAMA,EACN8F,YAAa,CACTC,QAAQ,GAEZjG,aAAcjJ,KAAKmM,iBACnBgD,iBAAkB3E,GAClB4E,mBAAoB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAM7B,EAAR4B,EAAQ5B,GAAIhE,EAAZ4F,EAAY5F,MAAZ,SAAAmF,OAA0BU,EAA1B,OAAAV,OAAoCnB,EAApC,QAAAmB,OAA6CnF,QAI7ErH,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACKpG,EAAKY,MAAMrF,EAAOO,EAAaP,EAAOO,EAAcA,GAAa+E,IAAI,SAAC6F,EAAOmE,GAAR,OAClErW,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAU0J,IAAK0M,GACXrW,EAAAC,EAAAC,cAACoW,GAAD,CAAOpE,MAAOA,EAAOS,aAAcwD,EAAKxD,aAAcF,QAAS0D,EAAK1D,QAC7DC,OAAQyD,EAAK7X,MAAMwE,QAAQ0S,8DAW1D,IAAI9H,EAAW9P,KAAKU,MAAMoP,SACtBC,EAAa/P,KAAKU,MAAMqP,WAC5B,OACI3N,EAAAC,EAAAC,cAACsN,GAAAvN,EAAD,CACIwN,aAAc,CAACC,WAAUC,cACzBrN,KAAM1C,KAAKU,MAAM2L,UACjB1J,QAAS3C,KAAKoM,iBACd4D,iBAAkB,IAClBC,aAAc,CACVtE,mBAAoB,eAGxBvJ,EAAAC,EAAAC,cAACqW,GAAD,CACIhW,QAAS3C,KAAKoM,iBACd9I,QAAQ,UACRiI,QAASnJ,EAAAC,EAAAC,cAAA,KAAGwH,UAAW9J,KAAK4J,QAAQsG,aAAcpN,GAAG,cAA5C,8HAELV,EAAAC,EAAAC,cAAA,WAFK,oGAWrB,OACIF,EAAAC,EAAAC,cAACsN,GAAAvN,EAAD,CACIK,KAAM1C,KAAKU,MAAM0V,YACjBzT,QAAS3C,KAAK4Y,YACd/I,aAAc,CAACC,SAAU,MAAOC,WAAY,UAC5C8I,oBAAqBC,KACrBvN,QAEInJ,EAAAC,EAAAC,cAACF,EAAAC,EAAM0R,SAAP,KACI3R,EAAAC,EAAAC,cAACyW,GAAA1W,EAAD,CACIyH,UAAW9J,KAAK4J,QAAQoP,SACxB1V,QAAQ,cACRtB,MAAOhC,KAAKU,MAAMiH,SAEtBvF,EAAAC,EAAAC,cAAA,6EAahB,OAAOtC,KAAKJ,MAAM6R,KAAOzR,KAAKJ,MAAM6R,KAAKnL,IAAM,KAAOtG,KAAKU,MAAMwE,QAAQ+R,yCAIzE,OACI7U,EAAAC,EAAAC,cAAA,OAAKwH,UAAW9J,KAAK4J,QAAQgD,QACxB5M,KAAKoQ,iBACLpQ,KAAKU,MAAMwE,SAAWlF,KAAKU,MAAMwE,QAAQuP,OACtCrS,EAAAC,EAAAC,cAAA,WACKtC,KAAKiZ,eACyB,YAA9BjZ,KAAKU,MAAMwE,QAAQuP,QAAyBzU,KAAK6U,UAW5C,GAVFzS,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMgL,WAAS,EAACvC,QAAS,GAAIX,UAAU,SAAS2D,WAAW,SAASR,QAAQ,UACxElL,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAMkL,MAAI,EAACwK,GAAI,GAAI5D,GAAI,IACnB/R,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQiB,QAAQ,YAAY6U,KAAK,QAAQ9T,MAAM,UACvCD,QAASpE,KAAKqW,uBACdvM,UAAW9J,KAAK4J,QAAQjB,QAFhC,4BAIIvG,EAAAC,EAAAC,cAAC4W,GAAA7W,EAAD,CAAiByH,UAAW9J,KAAK4J,QAAQqL,eAKxDjV,KAAKmZ,gBACLnZ,KAAK4W,gBACL5W,KAAKuW,wBAGVnU,EAAAC,EAAAC,cAAA,uCAtbEuC,aA4bP4F,yBAxmBA,SAAAZ,GAAK,MAAK,CACrB+C,OAAO9M,OAAAmC,EAAA,EAAAnC,CAAA,CACHyQ,MAAO,OACPC,UAAgC,EAArB3G,EAAMiB,QAAQC,KACzBF,WAAiC,EAArBhB,EAAMiB,QAAQC,KAC1B0F,YAAkC,EAArB5G,EAAMiB,QAAQC,MAC1BlB,EAAM6G,YAAYC,GAAG,KAA4B,EAArB9G,EAAMiB,QAAQC,KAAW,GAAK,CACvDwF,MAAO,KACP1F,WAAY,OACZ4F,YAAa,SAGrB2I,YAAa,CACTC,aAAY,aAAAzK,OAAe/E,EAAMc,QAAQ2O,KAAK,OAElDC,aAAc,CACV/D,KAAM,GAEVgE,iBAAkB,CACdC,eAAgB,iBAEpB5B,iBAAkB,CACdxM,gBAAiBxB,EAAMc,QAAQ2O,KAAK,KACpCjV,MAAOwF,EAAMc,QAAQ+O,OAAOC,MAC5BC,aAAmC,EAArB/P,EAAMiB,QAAQC,MAEhCiN,wBAAwBlY,OAAAmC,EAAA,EAAAnC,CAAA,CACpBoR,QAAO,GAAAtC,OAA0B,EAArB/E,EAAMiB,QAAQC,KAAnB,OACNlB,EAAM6G,YAAYC,GAAG,MAAQ,CAC1BkJ,aAAc,IAGtBC,SAAU,CACNtJ,UAAgC,EAArB3G,EAAMiB,QAAQC,MAE7BmJ,KAAM,CACFhQ,QAAS,QAEbkQ,YAAa,CACToB,KAAM,GAEV4C,OAAQ,CACJ2B,UAAW,OACX5W,OAAQ,QAEZwF,OAAQ,CACJxF,OAAQ0G,EAAMiB,QAAQC,MAE1BkK,UAAW,CACPpK,WAAYhB,EAAMiB,QAAQC,MAE9BkN,KAAM,CACFvK,eAAgB,OAChBrJ,MAAO,WAEX6L,aAAc,CACVyF,SAAU,UAgjBHlL,CAAmBsL,IC9nB5BiE,GAAY,CAACtM,eAAgB,OAAQrJ,MAAO,UAAWlB,OAAQ,SAmJtD8W,eA/IX,SAAAA,EAAYra,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAia,IACfpa,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAma,GAAA9Z,KAAAH,KAAMJ,KAuBVsa,aAAe,YACG,IAAIjU,KACVkU,OAAO,2BAA4B,CAACrI,KAAM,MAClDjS,EAAKS,SAAS,CAAC6P,MAAM,EAAOsB,KAAM,QAzBlC5R,EAAKa,MAAQ,CACTyP,MAAM,EACNtC,SAAU,GACV4D,KAAM,MAEV5R,EAAK+R,WAAa/R,EAAK+R,WAAWtQ,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAClBA,EAAKqa,aAAera,EAAKqa,aAAa5Y,KAAlBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACpBA,EAAKkS,YAAclS,EAAKkS,YAAYzQ,KAAjBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IACnBA,EAAKsS,WAAatS,EAAKsS,WAAW7Q,KAAhBxB,OAAAyB,EAAA,EAAAzB,CAAAD,IAVHA,0EAiBRsQ,GACPnQ,KAAKM,SAAS,CAAC6P,KAAMA,0CAeX,IAAAhO,EAAAnC,KAGNmG,EAAS,CACTC,QAAS,CAACC,cAAiB,WAHjB,IAAIJ,KACEC,IAAI,2BAA4B,CAAC4L,KAAM,QAI3D/K,IAAMb,IAAI,gBAAiBC,GACtBc,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHhF,EAAK7B,SAAS,CAACuN,SAAU1G,MAE5BU,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,iDAKpB9H,KAAKmS,kDAGI,IAAAjK,EAAAlI,KACLoa,EAAU,IAAInU,IACdD,EAAQoU,EAAQlU,IAAI,2BAA4B,CAAC4L,KAAM,MAC3D,GAAI9L,EAAO,CACP,IAAIG,EAAS,CACTC,QAAS,CAACC,cAAiB,UAAYL,IAE3Ce,IAAMb,IAAI,eAAgBC,GACrBc,KAAK,SAACC,GACH,OAAOA,EAAIC,OAEdF,KAAK,SAACE,GACHe,EAAK5H,SAAS,CACVmR,KAAM,CACF7Q,KAAMuG,EAAKvG,KACXsR,SAAU/K,EAAK+K,SACfR,MAAOvK,EAAKuK,MACZpL,IAAKa,EAAKb,KAEd6J,MAAM,GACR,kBAAIjI,EAAK6J,kBAGdlK,MAAM,SAACC,GACJ3C,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAI,UACZgV,EAAQD,OAAO,4BACfjS,EAAK5H,SAAS,CACV6P,MAAM,EACNtC,SAAU,GACV4D,KAAM,2CAMjB,IAAAlC,EAAAvP,KAEL,OAEIoC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,cACJV,EAAAC,EAAAC,cAAC+X,EAAAhY,EAAD,CAAQiY,SAAS,SAASjW,MAAM,UAAU7B,MAAO,CAAC8X,SAAU,aACxDlY,EAAAC,EAAAC,cAACiY,EAAAlY,EAAD,KACID,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYiB,QAAQ,KAAKe,MAAM,UAAUmW,QAAM,EAAChY,MAAO,CAACgT,KAAM,IAA9D,gBAIApT,EAAAC,EAAAC,cAACmY,EAAA,EAAD,CAASC,OAAK,EAACjN,GAAG,IAAIjL,MAAOwX,IACzB5X,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,gBAKHrC,KAAKU,MAAMyP,KACR/N,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQgC,MAAM,UAAUf,QAAQ,WAAWc,QAASpE,KAAKka,cAAzD,oBAIA9X,EAAAC,EAAAC,cAACmY,EAAA,EAAD,CAASC,OAAK,EAACjN,GAAG,SAASjL,MAAOwX,IAC9B5X,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQgC,MAAM,UAAUf,QAAQ,YAAhC,wBAShBlB,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,WACX1H,EAAAC,EAAAC,cAACqY,EAAA,EAAD,KACIvY,EAAAC,EAAAC,cAACsY,EAAA,EAAD,CAAOF,OAAK,EAAC5I,KAAK,IAAI+I,OAAQ,kBAAMzY,EAAAC,EAAAC,cAACwY,GAAD,CAAM7S,eAAgBsH,EAAK4C,WAAW7Q,KAAKiO,GACrC1B,SAAU0B,EAAK7O,MAAMmN,SAAUsC,KAAMZ,EAAK7O,MAAMyP,KAChDsB,KAAMlC,EAAK7O,MAAM+Q,UAC3DrP,EAAAC,EAAAC,cAACsY,EAAA,EAAD,CAAOF,OAAK,EAAC5I,KAAK,SACX+I,OAAQ,kBAAOtL,EAAK7O,MAAMyP,KAAO/N,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAUtN,GAAG,MAC1CrL,EAAAC,EAAAC,cAAC0Y,GAAD,CAAQ7I,WAAY5C,EAAK4C,WAAYP,WAAYrC,EAAKqC,WAC9CG,YAAaxC,EAAKwC,YAClBC,gBAAiBzC,EAAK4C,WAAW7Q,KAAKiO,QACzDnN,EAAAC,EAAAC,cAACsY,EAAA,EAAD,CAAOF,OAAK,EAAC5I,KAAK,iBACX+I,OAAQ,SAACjb,GAAD,OAAWwC,EAAAC,EAAAC,cAAC2Y,GAADnb,OAAAob,OAAA,CAAS/K,KAAMZ,EAAK7O,MAAMyP,KAAMsB,KAAMlC,EAAK7O,MAAM+Q,MAAU7R,iBAxIpFiF,aCRnBgF,GAAQsR,0BAAe,CACzBxQ,QAAS,CACLnC,QAAS,CACLiK,KAAM,YAGd2I,WAAY,CACRC,iBAAiB,KAKzBC,IAAST,OACLzY,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACInZ,EAAAC,EAAAC,cAACkZ,GAAA,iBAAD,CAAkB3R,MAAOA,IACrBzH,EAAAC,EAAAC,cAACmZ,GAAD,QAGRC,SAASC,eAAe,STuGpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAM7U,KAAK,SAAA8U,GAC/BA,EAAaC","file":"static/js/main.024c40e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass CreateContest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openCreate: false,\n            name: '',\n            image_path: '',\n            url: '',\n            init_date: new Date('2019-08-18'),\n            end_date: new Date('2019-09-20'),\n            payment: 0,\n            script_path: '',\n            recommendations_path: '',\n            selectedFileBanner: null,\n            selectedFileScript: null,\n            selectedFileRecommendations: null,\n        };\n        this.openCreate = this.openCreate.bind(this);\n        this.handleCloseCreate = this.handleCloseCreate.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\n        this.handleSelectedBannerFile = this.handleSelectedBannerFile.bind(this);\n        this.handleSelectedScriptFile = this.handleSelectedScriptFile.bind(this);\n        this.handleSelectedRecommendationsFile = this.handleSelectedRecommendationsFile.bind(this);\n        this.cleanState = this.cleanState.bind(this);\n    }\n\n    openCreate() {\n        this.setState({openCreate: true});\n    }\n\n    handleCloseCreate() {\n        this.setState({openCreate: false});\n        this.cleanState();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSelectedBannerFile(event) {\n        this.setState({\n            selectedFileBanner: event.target.files[0],\n            image_path: event.target.files[0].name,\n        })\n    }\n\n    handleSelectedScriptFile(event) {\n        this.setState({\n            selectedFileScript: event.target.files[0],\n            script_path: event.target.files[0].name,\n        })\n    }\n\n    handleSelectedRecommendationsFile(event) {\n        this.setState({\n            selectedFileRecommendations: event.target.files[0],\n            recommendations_path: event.target.files[0].name,\n        })\n    }\n\n    handleStartDateChange = date => {\n        this.setState({init_date: date});\n    };\n\n    handleEndDateChange = date => {\n        this.setState({end_date: date});\n    };\n\n    cleanState() {\n        this.setState({\n            name: '',\n            image_path: '',\n            url: '',\n            init_date: new Date('2019-08-18'),\n            end_date: new Date('2019-08-19'),\n            payment: 0,\n            script_path: '',\n            recommendations_path: '',\n        });\n    }\n\n    render() {\n        return (\n            <Dialog\n                style={{textAlign: \"center\"}}\n                open={this.state.openCreate}\n                onClose={this.handleCloseCreate}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Crear Concurso</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Llene todos los campos para crear un nuevo concurso\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        name=\"name\"\n                        value={this.state.name}\n                        label=\"Nombre del concurso\"\n                        required\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        name=\"url\"\n                        value={this.state.url}\n                        label=\"URL\"\n                        required\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            label=\"Fecha inicio\"\n                            margin=\"dense\"\n                            name=\"init_date\"\n                            value={this.state.init_date}\n                            required\n                            variant=\"outlined\"\n                            onChange={this.handleStartDateChange}\n                        />\n                        <DatePicker\n                            label=\"Fecha fin\"\n                            margin=\"dense\"\n                            name=\"end_date\"\n                            value={this.state.end_date}\n                            required\n                            variant=\"outlined\"\n                            onChange={this.handleEndDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <TextField\n                        margin=\"dense\"\n                        name=\"payment\"\n                        value={this.state.payment}\n                        label=\"Pago\"\n                        type=\"number\"\n                        required\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <hr/>\n                    <form>\n                        <label htmlFor=\"banner-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Subir imágen\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedBannerFile}\n                            name=\"banner-input\"\n                            accept=\"image/*\"\n                            style={{display: 'none'}}\n                            id=\"banner-file\"\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"script-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Subir guión/texto\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedScriptFile}\n                            name=\"script-input\"\n                            accept=\".pdf, .doc, .docx, .txt\"\n                            style={{display: 'none'}}\n                            id=\"script-file\"\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"recom-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Subir recomendaciones\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedRecommendationsFile}\n                            name=\"recommendations-input\"\n                            accept=\".pdf, .doc, .docx, .txt\"\n                            style={{display: 'none'}}\n                            id=\"recom-file\"\n                            type=\"file\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCloseCreate} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={() => {\n                                let newContest = {\n                                    name: this.state.name,\n                                    imagePath: this.state.image_path,\n                                    url: this.state.url,\n                                    initDate: this.state.init_date,\n                                    endDate: this.state.end_date,\n                                    payment: this.state.payment,\n                                    scriptPath: this.state.script_path,\n                                    recommendationsPath: this.state.recommendations_path,\n                                    selectedFileBanner: this.state.selectedFileBanner,\n                                    selectedFileScript: this.state.selectedFileScript,\n                                    selectedFileRecommendations: this.state.selectedFileRecommendations\n                                };\n                                return this.props.createContest(newContest);\n                            }\n                        } \n                        color=\"primary\">\n                        Crear\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default CreateContest;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass EditContest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEdit: false,\n            name: '',\n            image_path: '',\n            url: '',\n            init_date: new Date('2019-08-18'),\n            end_date: new Date('2019-09-20'),\n            payment: 0,\n            script_path: '',\n            recommendations_path: '',\n            selectedFileBanner: null,\n            selectedFileScript: null,\n            selectedFileRecommendations: null,\n        };\n        this.handleCloseEdit = this.handleCloseEdit.bind(this);\n        this.handleClickEdit = this.handleClickEdit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\n        this.handleSelectedBannerFile = this.handleSelectedBannerFile.bind(this);\n        this.handleSelectedScriptFile = this.handleSelectedScriptFile.bind(this);\n        this.handleSelectedRecommendationsFile = this.handleSelectedRecommendationsFile.bind(this);\n        this.cleanState = this.cleanState.bind(this);\n    }\n\n    handleClickEdit() {\n        this.setState({openEdit: true});\n    }\n\n    handleCloseEdit() {\n        this.setState({openEdit: false});\n        this.cleanState();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSelectedBannerFile(event) {\n        this.setState({\n            selectedFileBanner: event.target.files[0],\n            image_path: event.target.files[0].name,\n        })\n    }\n\n    handleSelectedScriptFile(event) {\n        this.setState({\n            selectedFileScript: event.target.files[0],\n            script_path: event.target.files[0].name,\n        })\n    }\n\n    handleSelectedRecommendationsFile(event) {\n        this.setState({\n            selectedFileRecommendations: event.target.files[0],\n            recommendations_path: event.target.files[0].name,\n        })\n    }\n\n    handleStartDateChange = date => {\n        this.setState({init_date: date});\n    };\n\n    handleEndDateChange = date => {\n        this.setState({end_date: date});\n    };\n\n    cleanState() {\n        this.setState({\n            name: '',\n            image_path: '',\n            url: '',\n            init_date: new Date('2019-08-18'),\n            end_date: new Date('2019-08-19'),\n            payment: 0,\n            script_path: '',\n            recommendations_path: '',\n        });\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.openEdit}\n                onClose={this.handleCloseEdit}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Modificar Concurso</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Llene los campos que desea modificar\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        name=\"name\"\n                        value={this.state.name}\n                        label=\"Nombre del concurso\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        name=\"url\"\n                        value={this.state.url}\n                        label=\"URL\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            label=\"Fecha inicio\"\n                            margin=\"dense\"\n                            name=\"init_date\"\n                            value={this.state.init_date}\n                            required\n                            variant=\"outlined\"\n                            onChange={this.handleStartDateChange}\n                        />\n                        <DatePicker\n                            label=\"Fecha fin\"\n                            margin=\"dense\"\n                            name=\"end_date\"\n                            value={this.state.end_date}\n                            required\n                            variant=\"outlined\"\n                            onChange={this.handleEndDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <TextField\n                        margin=\"dense\"\n                        name=\"payment\"\n                        value={this.state.payment}\n                        label=\"Pago\"\n                        type=\"number\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={this.handleInputChange}\n                    />\n                    <form>\n                        <label htmlFor=\"banner-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Cambiar imagen\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedBannerFile}\n                            name=\"banner-input\"\n                            accept=\"image/*\"\n                            style={{display: 'none'}}\n                            id=\"banner-file\"\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"script-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Cambiar guión/texto\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedScriptFile}\n                            name=\"script-input\"\n                            accept=\".pdf, .doc, .docx, .txt\"\n                            style={{display: 'none'}}\n                            id=\"script-file\"\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"recom-file\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Cambiar recomendaciones\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedRecommendationsFile}\n                            name=\"recommendations-input\"\n                            accept=\".pdf, .doc, .docx, .txt\"\n                            style={{display: 'none'}}\n                            id=\"recom-file\"\n                            type=\"file\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCloseEdit} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={() => {\n                            let contest = {\n                                //user_id: this.props.user._id,\n                                name: this.state.name,\n                                imagePath: this.state.image_path,\n                                url: this.state.url,\n                                initDate: this.state.init_date,\n                                endDate: this.state.end_date,\n                                payment: this.state.payment,\n                                scriptPath: this.state.script_path,\n                                recommendationsPath: this.state.recommendations_path,\n                                selectedFileBanner: this.state.selectedFileBanner,\n                                selectedFileScript: this.state.selectedFileScript,\n                                selectedFileRecommendations: this.state.selectedFileRecommendations\n                            };\n                            console.log(contest);\n                            return this.props.editContest(contest);\n                        }} \n                        color=\"primary\">\n                        Modificar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default EditContest;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditContest from './EditContest';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\n\nclass ContestDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDetails: false,\n            selectedContest: {},\n        }\n        this.editRef = React.createRef();\n        this.handleClickDetails = this.handleClickDetails.bind(this);\n        this.handleCloseDetails = this.handleCloseDetails.bind(this);\n        this.editContest = this.editContest.bind(this);\n        this.handleClickEdit = this.handleClickEdit.bind(this);\n    }\n\n    handleClickDetails(c) {\n        this.setState({openDetails: true, selectedContest: c});\n\n    }\n\n    handleCloseDetails() {\n        this.setState({openDetails: false});\n    }\n\n    handleClickEdit() {\n        this.handleCloseDetails();\n        this.editRef.current.handleClickEdit();\n    }\n\n    editContest(contest) {\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\");\n        let config = {\n            headers: {'Authorization': 'Bearer ' + token}\n        };\n\n        contest.id = this.state.selectedContest._id;\n        if (contest.name === '') contest.name = this.state.selectedContest.NAME;\n        if (contest.url === '') contest.url = this.state.selectedContest.URL;\n        if (contest.initDate === new Date('2019-08-18')) contest.initDate = this.state.selectedContest.INIT_DATE;\n        if (contest.endDate === new Date('2019-09-20')) contest.endDate = this.state.selectedContest.END_DATE;\n        if (contest.payment === 0) contest.payment = this.state.selectedContest.PAYMENT;\n        if (contest.imagePath === '') contest.imagePath = this.state.selectedContest.IMAGE_PATH;\n        if (contest.scriptPath === '') contest.scriptPath = this.state.selectedContest.SCRIPT_PATH;\n        if (contest.recommendationsPath === '') contest.recommendationsPath = this.state.selectedContest.RECOMMENDATIONS_PATH;\n\n        this.editRef.current.handleCloseEdit();\n        axios.put('/API/contest', contest, config)\n            .then((res) => {\n                console.log(res);\n                return res.data;\n            })\n            .then((data) => {\n                console.log(data);\n                if (contest.selectedFileBanner !== null) {\n                    const bannerData = new FormData();\n                    bannerData.append('file', contest.selectedFileBanner, contest.selectedFileBanner.name);\n                    axios.post('/API/banner/' + data.contestId, bannerData, {\n                        onUploadProgress: ProgressEvent => {\n                            this.setState({\n                                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                            });\n                        },\n                        headers: {'Authorization': 'Bearer ' + token}\n                    })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                }\n                if (contest.selectedFileScript !== null) {\n                    const scriptData = new FormData();\n                    scriptData.append('file', contest.selectedFileScript, contest.selectedFileScript.name);\n                    axios.post('/API/script/' + data.contestId, scriptData, {\n                        onUploadProgress: ProgressEvent => {\n                            this.setState({\n                                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                            });\n                        },\n                        headers: {'Authorization': 'Bearer ' + token}\n                    })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                }\n                if (contest.selectedFileRecommendations !== null) {\n                    const recommendationsData = new FormData();\n                    recommendationsData.append('file', contest.selectedFileRecommendations, contest.selectedFileRecommendations.name);\n                    axios.post('/API/recommendation/' + data.contestId, recommendationsData, {\n                        onUploadProgress: ProgressEvent => {\n                            this.setState({\n                                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                            });\n                        },\n                        headers: {'Authorization': 'Bearer ' + token}\n                    })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                }\n                this.props.renderContests();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <EditContest editContest={this.editContest} ref={this.editRef}/>\n                <Dialog\n                    open={this.state.openDetails}\n                    onClose={this.handleCloseDetails}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle style={{textAlign: \"center\"}} id=\"form-dialog-title\">Detalles</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Detalles del concurso {this.state.selectedContest.NAME}\n                        </DialogContentText>\n                        <List>\n                            <ListItem>\n                                <ListItemText primary=\"Nombre\" secondary={this.state.selectedContest.NAME}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText primary=\"URL\" secondary={this.state.selectedContest.URL}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText primary=\"Fecha De Inicio\"\n                                              secondary={this.state.selectedContest.INIT_DATE}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText primary=\"Fecha De Finalización\"\n                                              secondary={this.state.selectedContest.END_DATE}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText primary=\"Pago\" secondary={this.state.selectedContest.PAYMENT}/>\n                            </ListItem>\n                            <ListItem button component=\"a\"\n                                      href={process.env.REACT_APP_RECORDINGS_SERVER + this.state.selectedContest.IMAGE_PATH}\n                                      target=\"_blank\">\n                                <ListItemText primary=\"Imagen subida\"\n                                              secondary={this.state.selectedContest.IMAGE_PATH}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem button component=\"a\"\n                                      href={process.env.REACT_APP_RECORDINGS_SERVER + this.state.selectedContest.SCRIPT_PATH}\n                                      target=\"_blank\">\n                                <ListItemText primary=\"Guión/Texto subido\"\n                                              secondary={this.state.selectedContest.SCRIPT_PATH}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem button component=\"a\"\n                                      href={process.env.REACT_APP_RECORDINGS_SERVER + this.state.selectedContest.RECOMMENDATIONS_PATH}\n                                      target=\"_blank\">\n                                <ListItemText primary=\"Recomendaciones subidas\"\n                                              secondary={this.state.selectedContest.RECOMMENDATIONS_PATH}/>\n                            </ListItem>\n                        </List>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDetails} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        <Button onClick={this.handleClickEdit} color=\"primary\">\n                            Modificar\n                        </Button>\n                        <Button onClick={() => this.props.deleteContest(this.state.selectedContest)} color=\"primary\">\n                            Eliminar\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ContestDetails;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport {withStyles} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport CreateContest from './CreateContest';\nimport ContestDetails from './ContestDetails';\n\nconst styles = theme => ({\n    layout: {\n        width: 'auto',\n        marginTop: theme.spacing.unit * 6,\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    createButton: {\n        margin: 'auto'\n    },\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    }\n});\n\nconst actionsStyles = theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing.unit * 2.5,\n    },\n});\n\nclass TablePaginationActions extends React.Component {\n    handleFirstPageButtonClick = event => {\n        this.props.onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = event => {\n        this.props.onChangePage(event, this.props.page - 1);\n    };\n\n    handleNextButtonClick = event => {\n        this.props.onChangePage(event, this.props.page + 1);\n    };\n\n    handleLastPageButtonClick = event => {\n        this.props.onChangePage(\n            event,\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n        );\n    };\n\n    render() {\n        const {classes, count, page, rowsPerPage, theme} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <IconButton\n                    onClick={this.handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"First Page\"\n                >\n                    {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"Previous Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Next Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Last Page\"\n                >\n                    {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {withTheme: true})(\n    TablePaginationActions,\n);\n\nconst variantIcon = {\n    error: ErrorIcon,\n};\n\nconst styles1 = theme => ({\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const {classes, variant, onClose, message} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant])}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)}/>\n                    {message}\n          </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n        />\n    );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.classes = props.classes;\n        this.state = {\n            logged: false,\n            openCreate: false,\n            openDetails: false,\n            openEdit: false,\n            selectedContest: {},\n            name: '',\n            image_path: '',\n            url: '',\n            init_date: new Date('2019-08-18'),\n            end_date: new Date('2019-09-20'),\n            payment: 0,\n            script_path: '',\n            recommendations_path: '',\n            selectedFileBanner: null,\n            selectedFileScript: null,\n            selectedFileRecommendations: null,\n            page: 0,\n            rowsPerPage: 50,\n            openSnack: false,\n            messageErr: '',\n        };\n        this.classes = props.classes;\n        this.renderHome = this.renderHome.bind(this);\n        this.renderContests = this.renderContests.bind(this);\n        this.handleClickCreateContest = this.handleClickCreateContest.bind(this);\n        this.createContest = this.createContest.bind(this);\n        this.handleClickDetails = this.handleClickDetails.bind(this);\n        this.deleteContest = this.deleteContest.bind(this);\n        this.handleCloseSnack = this.handleCloseSnack.bind(this);\n        this.createReference = React.createRef();\n        this.detailsRef = React.createRef();\n    }\n\n    //Renderiza el home cuando no se ha registrado\n    renderHome() {\n        return (\n            <div className={this.classes.layout}>\n                <div className={this.classes.heroUnit}>\n                    <div className={this.classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Super Voices\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Con SuperVoice podrás escoger al mejor locutor para tus proyectos. No tendrás que\n                            preocuparte por el almacenamiento o procesamiento de los audios, podrás concentrarte en\n                            encontrar la mejor voz!\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Inicia sesión o crea una cuenta para empezar\n                        </Typography>\n                        <div className={this.classes.heroButtons}>\n                            <Grid container spacing={16} justify=\"center\">\n                                <Grid item>\n                                    <Link to={\"/login\"} style={{textDecoration: 'none', color: 'inherit'}}>\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Empezar ahora!\n                                        </Button>\n                                    </Link>\n\n                                </Grid>\n                                {/**\n                                 <Grid item>\n                                 <Button variant=\"outlined\" color=\"primary\">\n                                 Sobre nosotros\n                                 </Button>\n                                 </Grid>\n                                 **/}\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({page});\n    };\n\n    //Luego de loggearse\n    renderContests() {\n        const {rowsPerPage, page} = this.state;\n        const rows = this.props.contests;\n        return (\n            <div className={this.classes.layout}>\n                <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                    <Button onClick={this.handleClickCreateContest} color='primary' variant=\"contained\">\n                        Crear concurso\n                    </Button>\n                </Grid>\n                <hr style={{borderColor: \"transparent\"}}/>\n                <Paper className={this.classes.root}>\n                    <Table className={this.classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>URL del concurso</TableCell>\n                                <TableCell align=\"center\">Nombre</TableCell>\n                                <TableCell align=\"center\">Detalles</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.contests.length > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((c, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\"><Link to={`/contests/${c.URL}`}>\n                                        {c.URL}\n                                    </Link></TableCell>\n                                    <TableCell align=\"center\">{c.NAME}</TableCell>\n                                    <TableCell align=\"center\"><Button onClick={() => this.handleClickDetails(c)}\n                                                                      color='primary' variant=\"contained\">Ver\n                                        Detalles</Button></TableCell>\n                                </TableRow>\n                            )) : <TableRow>\n                                <TableCell colSpan={3} component=\"th\" scope=\"row\">No se ha creado ningun concurso\n                                    todavía.</TableCell>\n                            </TableRow>}\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                                <TablePagination\n                                    rowsPerPageOptions={[50]}\n                                    colSpan={3}\n                                    count={rows.length}\n                                    rowsPerPage={rowsPerPage}\n                                    page={page}\n                                    SelectProps={{\n                                        native: true,\n                                    }}\n                                    onChangePage={this.handleChangePage}\n                                    ActionsComponent={TablePaginationActionsWrapped}\n                                    labelDisplayedRows={({from, to, count}) => `${from} a ${to} de ${count}`}\n                                />\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </Paper>\n\n            </div>\n        );\n    }\n\n    //Crear concursos --------------------------------\n    handleClickCreateContest() {\n        this.createReference.current.openCreate();\n    }\n\n    createContest(contest) {\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\");\n        let config = {\n            headers: {'Authorization': 'Bearer ' + token}\n        };\n        axios.post('/API/contest', contest, config)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                // POST action for the banner\n                console.log('post del banner');\n                if (data.messageErr) {\n                    this.setState({messageErr: data.messageErr});\n                    this.setState({openSnack: true});\n                    return;\n                }\n\n                this.createReference.current.handleCloseCreate();\n\n                const bannerData = new FormData();\n                bannerData.append('file', contest.selectedFileBanner, contest.selectedFileBanner.name);\n                console.log('antes de axios.post');\n                axios.post( '/API/banner/' + data._id, bannerData, {\n                    onUploadProgress: ProgressEvent => {\n                        this.setState({\n                            loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                        });\n                    },\n                    headers: {'Authorization': 'Bearer ' + token}\n                }).then((res) => {\n                    console.log('then despues de post banner', res.data)\n                    return res.data;\n                }).then((resBanner) => {\n\n                    // POST action for the script\n                    console.log('script post');\n                    const scriptData = new FormData();\n                    scriptData.append('file', contest.selectedFileScript, contest.selectedFileScript.name);\n                    axios.post('/API/script/' + data._id, scriptData, {\n                        onUploadProgress: ProgressEvent => {\n                            this.setState({\n                                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                            });\n                        },\n                        headers: {'Authorization': 'Bearer ' + token}\n                    }).then((res) => {\n                        console.log('then despues de post script', res.data);\n                        return res.data;\n                    }).then((resScript) => {\n\n                        // POST action for the recommendations\n                        console.log('script recom');\n                        const recommendationsData = new FormData();\n                        recommendationsData.append('file', contest.selectedFileRecommendations, contest.selectedFileRecommendations.name);\n                        axios.post('/API/recommendation/' + data._id, recommendationsData, {\n                            onUploadProgress: ProgressEvent => {\n                                this.setState({\n                                    loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                                });\n                            },\n                            headers: {'Authorization': 'Bearer ' + token}\n                        }).then((res) => {\n                            console.log('then despues de post recom', res.data);\n                            this.props.renderContests();\n                            return res.data;\n                        }).catch((err) => {\n                            console.log('catch 1');\n                            console.log(err);\n                        });\n                    }).catch((err) => {\n                        console.log('catch 2');\n                        console.log(err);\n                    });\n                }).catch((err) => {\n                    console.log('catch 3');\n                    console.log(err);\n                });\n            })\n            .catch((err) => {\n                console.log('catch 4');\n                console.log(err);\n            });\n    }\n    //Crear concursos --------------------------------\n\n    //Detalles        --------------------------------\n    handleClickDetails(c) {\n        this.detailsRef.current.handleClickDetails(c);\n    }\n    //Detalles        --------------------------------\n\n    //Eliminar        --------------------------------\n    deleteContest(contest) {\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\");\n        let config = {\n            headers: {'Authorization': 'Bearer ' + token}\n        };\n        this.detailsRef.current.handleCloseDetails();\n        axios.delete('/API/contest/' + contest._id, config)\n            .then((res) => {\n                this.props.renderContests();\n                return res.data;\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n    }\n    //Eliminar        --------------------------------\n\n    //Extra           --------------------------------\n    renderSnackbar() {\n        let vertical = 'top';\n        let horizontal = 'center';\n        return (\n            <Snackbar\n                anchorOrigin={{vertical, horizontal}}\n                open={this.state.openSnack}\n                onClose={this.handleCloseSnack}\n                autoHideDuration={6000}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleCloseSnack}\n                    variant=\"error\"\n                    message={<p className={this.classes.notification} id=\"message-id\">{this.state.messageErr}</p>}\n                />\n            </Snackbar>\n\n        );\n    }\n\n    handleCloseSnack = () => {\n        this.setState({openSnack: false});\n    };\n    //Extra           --------------------------------\n\n    render() {\n        return (\n            <div>\n                {this.props.auth ? this.renderContests() : this.renderHome()}\n                {this.renderSnackbar()}\n                <CreateContest createContest={this.createContest} ref={this.createReference}/>\n                <ContestDetails ref={this.detailsRef} deleteContest={this.deleteContest} renderContests={this.props.renderContests}/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Home);","import React, {Component} from 'react';\n\n//import { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n        textAlign: 'center'\n    },\n    avatar: {\n        margin: 'auto',\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nfunction TabContainer(props) {\n    return (\n        <span style={{padding: 8 * 3}}>\n            {props.children}\n        </span>\n    );\n}\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.classes = props.classes;\n        this.state = {\n            value: 0,\n            name: \"\",\n            lastname: \"\",\n            email: \"\",\n            password: \"\",\n            repeatPassword: \"\",\n            message: null\n        };\n    }\n\n    componentDidMount() {\n        // custom rule will have name 'isPasswordMatch'\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            if (value !== this.state.password) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    handleLogin = e => {\n        e.preventDefault();\n        let user = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        axios.post('/API/loginUser', user)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                this.setState({message: data.message});\n                this.props.updateAuth(data.auth);\n                if (data.auth) {\n                    let cookies = new Cookies();\n                    cookies.set(\"SUPERVOICES_TOKEN_COOKIE\", data.token, {path: '/'});\n                    this.props.getContests();\n                    this.props.updateComponent();\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    handleSignup = e => {\n        e.preventDefault();\n\n        let user = {\n            name: this.state.name,\n            lastname: this.state.lastname,\n            email: this.state.email,\n            password: this.state.password\n        };\n        axios.post('/API/signupUser', user)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                this.setState({message: data.message});\n                this.props.updateAuth(data.auth);\n                if (data.auth) {\n                    let cookies = new Cookies();\n                    cookies.set(\"SUPERVOICES_TOKEN_COOKIE\", data.token, {path: '/'});\n                }\n                this.props.handleUser();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    handleTabChange = (event, value) => {\n        this.setState({value});\n    };\n\n    handleChange = (e) => {\n\n        this.setState(\n            {\n                [e.target.name]: e.target.value\n            }\n        )\n    };\n\n    render() {\n        const {value} = this.state;\n        return (\n            <main className={this.classes.main}>\n                <CssBaseline/>\n                <Paper className={this.classes.paper}>\n                    <Tabs value={value} onChange={this.handleTabChange}>\n                        <Tab label=\"Iniciar sesión\"/>\n                        <Tab label=\"Crear cuenta\"/>\n                    </Tabs>\n                    {value === 0 && <TabContainer>\n                        <Avatar className={this.classes.avatar}>\n                            <LockOutlinedIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Inicia sesión\n                        </Typography>\n                        <ValidatorForm\n                            onSubmit={this.handleLogin}\n                            ref=\"form\"\n                            onError={errors => console.log(errors)}\n                        >\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Correo\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"email\"\n                                value={this.state.email}\n                                validators={['required', 'isEmail']}\n                                errorMessages={['Este campo es obligatorio', 'Por favor ingrese un correo válido']}\n                            />\n\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\"\n                                       onChange={this.handleChange}/>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={this.classes.submit}\n                            >\n                                Iniciar sesión\n                            </Button>\n                        </ValidatorForm>\n                    </TabContainer>}\n                    {value === 1 && <TabContainer>\n                        <Avatar className={this.classes.avatar}>\n                            <LockOutlinedIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Regístrate\n                        </Typography>\n                        <ValidatorForm\n                            onSubmit={this.handleSignup}\n                            ref=\"form\"\n                            onError={errors => console.log(errors)}\n                        >\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Nombre\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"name\"\n                                value={this.state.name}\n                                validators={['required']}\n                                errorMessages={['Este campo es obligatorio']}\n                            />\n\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Apellido\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"lastname\"\n                                value={this.state.lastname}\n                                validators={['required']}\n                                errorMessages={['Este campo es obligatorio']}\n                            />\n\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Correo\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"email\"\n                                value={this.state.email}\n                                validators={['required', 'isEmail']}\n                                errorMessages={['Este campo es obligatorio', 'Por favor ingrese un correo válido']}\n                            />\n\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Contraseña\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"password\"\n                                type=\"password\"\n                                validators={['required']}\n                                errorMessages={['Este campo es obligatorio']}\n                                value={this.state.password}\n                            />\n                            <TextValidator\n                                margin=\"normal\"\n                                label=\"Confirmación contraseña\"\n                                fullWidth\n                                onChange={this.handleChange}\n                                name=\"repeatPassword\"\n                                type=\"password\"\n                                validators={['isPasswordMatch', 'required']}\n                                errorMessages={['Las contraseñas no coinciden', 'Este campo es obligatorio']}\n                                value={this.state.repeatPassword}\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={this.classes.submit}\n                            >\n                                Crear mi cuenta\n                            </Button>\n                        </ValidatorForm>\n                    </TabContainer>}\n                </Paper>\n            </main>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignIn);\n\nSignIn.propTypes = {\n    updateAuth: PropTypes.func.isRequired,\n    getContests: PropTypes.func.isRequired,\n};","import React, {Component} from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport {TableCell, withStyles} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    card: {\n        display: 'flex',\n        margin: \"15px 0px\"\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    chip: {\n        margin: theme.spacing.unit,\n    },\n});\n\n\nclass Entry extends Component {\n    constructor(props) {\n        super(props);\n        this.classes = props.classes;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <TableCell>\n                    <Card className={this.classes.card}>\n                        <Grid item md={4}>\n                            <div className={this.classes.cardDetails}>\n                                <CardContent>\n                                    <Typography component=\"h2\" variant=\"h5\">\n                                        {this.props.entry.NAME + \" \" + this.props.entry.LAST_NAME}\n                                        <Chip label={this.props.entry.STATUS}\n                                              color={this.props.entry.STATUS === 'Convertida' ? \"primary\" : \"secondary\"}\n                                              className={this.classes.chip}/>\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        {this.props.entry.DATE}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\">\n                                        {this.props.entry.EMAIL}\n                                    </Typography>\n                                    {this.props.isAdmin() && this.props.winner==null ?\n                                        <Button variant=\"contained\" value={this.props.entry.EMAIL}\n                                                name={`${this.props.entry.NAME} ${this.props.entry.LAST_NAME}`}\n                                                color=\"default\"\n                                                className={this.classes.button} onClick={this.props.handleWinner}>\n                                            Elegir voz\n                                            <StarsIcon className={this.classes.rightIcon}/>\n                                        </Button>\n                                        : \"\"}\n                                </CardContent>\n                            </div>\n                        </Grid>\n                        {this.props.isAdmin()?\n                            <Grid item md={4}>\n                                <Grid style={{height: \"100%\"}} container direction=\"column\" alignItems=\"center\"\n                                      justify=\"center\">\n                                    <Typography component=\"h2\" variant=\"h5\">Voz original</Typography>\n                                    <ReactAudioPlayer\n                                        src={ this.props.entry.URL_ORIGINAL}\n                                        controls\n                                    />\n                                </Grid>\n                            </Grid>\n                            :\"\"}\n                        {this.props.entry.STATUS === \"Convertida\" ?\n                            <Grid item md={this.props.isAdmin()?4:8}>\n                                <Grid style={{height: \"100%\"}} container direction=\"column\" alignItems=\"center\"\n                                      justify=\"center\">\n                                    <Typography component=\"h2\" variant=\"h5\">Voz convertida</Typography>\n                                    <ReactAudioPlayer\n                                        src={this.props.entry.URL_CONVERTED}\n                                        controls\n                                    />\n                                </Grid>\n                            </Grid> : \"\"}\n                    </Card>\n                </TableCell>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Entry);","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport green from '@material-ui/core/colors/green';\nimport classNames from 'classnames';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Entry from \"./Entry\";\nimport axios from \"axios\";\nimport {TextValidator, ValidatorForm} from \"react-material-ui-form-validator\";\nimport Cookies from \"universal-cookie\";\nimport {TableBody, TableHead} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst styles = theme => ({\n    layout: {\n        width: 'auto',\n        marginTop: theme.spacing.unit * 6,\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    toolbarMain: {\n        borderBottom: `1px solid ${theme.palette.grey[300]}`,\n    },\n    toolbarTitle: {\n        flex: 1,\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n    },\n    mainFeaturedPost: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    mainFeaturedPostContent: {\n        padding: `${theme.spacing.unit * 6}px`,\n        [theme.breakpoints.up('md')]: {\n            paddingRight: 0,\n        },\n    },\n    mainGrid: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    card: {\n        display: 'flex',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    banner: {\n        maxHeight: \"30vh\",\n        margin: \"auto\"\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"inherit\"\n    },\n    notification: {\n        fontSize: \"16px\"\n    }\n});\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n};\n\nfunction MySnackbarContent(props) {\n    const {classes, variant, onClose, message} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant])}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)}/>\n                    {message}\n          </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n        />\n    );\n}\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    }\n});\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst actionsStyles = theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing.unit * 2.5,\n    },\n});\n\nclass TablePaginationActions extends React.Component {\n    handleFirstPageButtonClick = event => {\n        this.props.onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = event => {\n        this.props.onChangePage(event, this.props.page - 1);\n    };\n\n    handleNextButtonClick = event => {\n        this.props.onChangePage(event, this.props.page + 1);\n    };\n\n    handleLastPageButtonClick = event => {\n        this.props.onChangePage(\n            event,\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n        );\n    };\n\n    render() {\n        const {classes, count, page, rowsPerPage, theme} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <IconButton\n                    onClick={this.handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"First Page\"\n                >\n                    {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"Previous Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Next Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Last Page\"\n                >\n                    {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {withTheme: true})(\n    TablePaginationActions,\n);\n\n\nclass Contest extends Component {\n    constructor(props) {\n        super(props);\n        this.classes = props.classes;\n        this.state = {\n            contest: {},\n            entries: [],\n            openSubmit: false,\n            name: \"\",\n            lastName: \"\",\n            email: \"\",\n            selectedFile: null,\n            open: false,\n            openSnack: false,\n            vertical: 'top',\n            horizontal: 'center',\n            page: 0,\n            rowsPerPage: 50,\n            showLoading: false\n        };\n        this.handleClickSubmitEntry = this.handleClickSubmitEntry.bind(this);\n        this.handleCloseSubmit = this.handleCloseSubmit.bind(this);\n        this.renderSubmitDialogue = this.renderSubmitDialogue.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelectedFile = this.handleSelectedFile.bind(this);\n        this.handleWinner = this.handleWinner.bind(this);\n        this.getEntries = this.getEntries.bind(this);\n        this.getContestInfo = this.getContestInfo.bind(this);\n        this.renderEntries = this.renderEntries.bind(this);\n        this.handleCloseSnack = this.handleCloseSnack.bind(this);\n        this.isAdmin = this.isAdmin.bind(this);\n    }\n\n    componentDidMount() {\n        this.getContestInfo();\n        this.getEntries();\n    }\n\n    getContestInfo() {\n        axios.get(`/API/contest/${this.props.location.pathname.split(\"/\")[2]}`)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                this.setState({contest: data[0]}, () => {\n                    if (this.state.contest) {\n                        axios.get(`/API/entry/${this.state.contest.URL}`)\n                            .then((res) => {\n                                return res.data;\n                            })\n                            .then((data) => {\n                                this.setState({entries: data})\n                            })\n                            .catch((err) => {\n                                console.log(err);\n                            });\n                    } else {\n                        this.setState({contest: {}})\n                    }\n                })\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    getEntries() {\n        if (this.state.contest.ID) {\n            axios.get(`/API/entry/${this.state.contest.ID}`)\n                .then((res) => {\n                    return res.data;\n                })\n                .then((data) => {\n                    this.setState({entries: data})\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    }\n\n    handleClickSubmitEntry() {\n        this.setState({openSubmit: true});\n    }\n\n    handleCloseSubmit() {\n        this.cleanState();\n        this.setState({\n            openSubmit: false,\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit() {\n        const entry = {\n            contestId: this.state.contest._id,\n            userId: this.state.contest.USER_ID,\n            name: this.state.name,\n            lastName: this.state.lastName,\n            date: new Date().toISOString().slice(0, 19).replace('T', ' '),\n            email: this.state.email,\n            status: 'No convertida',\n            urlOriginal: '',\n            urlConverted: '',\n            urlContest: this.state.contest.URL\n        };\n\n\n        axios.post('/API/entry', entry)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                const recordData = new FormData();\n                recordData.append('file', this.state.selectedFile, this.state.selectedFile.name);\n                axios.post('/API/recording/' + data.USER_ID + '/' + this.state.contest._id + '/' + data._id, recordData, {\n                    onUploadProgress: ProgressEvent => {\n                        this.setState({showLoading: true});\n                        this.setState({\n                            loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                        });\n                    },\n                }).then(res => {\n                    this.setState({showLoading: false, openSnack: true});\n                    this.getEntries();\n                }).catch((err) => {\n                    console.log(err);\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        this.setState({openSubmit: false})\n        this.cleanState();\n    }\n\n    handleSelectedFile(event) {\n        this.setState({\n            selectedFile: event.target.files[0]\n        });\n    }\n\n    handleWinner(e) {\n        e.preventDefault();\n        let contest = this.state.contest;\n        contest.WINNER_NAME = e.currentTarget.name;\n        contest.WINNER_EMAIL = e.currentTarget.value;\n\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\");\n        let config = {\n            headers: {'Authorization': 'Bearer ' + token}\n        };\n\n        axios.put('/API/contest/winner', contest, config)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                this.getContestInfo();\n                this.getEntries();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    renderSubmitDialogue() {\n        return (\n            <Dialog\n                style={{textAlign: \"center\"}}\n                open={this.state.openSubmit}\n                onClose={this.handleCloseSubmit}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <ValidatorForm\n                    onSubmit={this.handleSubmit}\n                    ref=\"form\"\n                    onError={errors => console.log(errors)}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Participar en el concurso</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Llene todos los campos para enviar su entrada al concurso\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            name=\"name\"\n                            value={this.state.name}\n                            label=\"Nombres\"\n                            required\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={this.handleInputChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            name=\"lastName\"\n                            value={this.state.lastName}\n                            label=\"Apellidos\"\n                            required\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={this.handleInputChange}\n                        />\n                        <TextValidator\n                            margin=\"dense\"\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            onChange={this.handleInputChange}\n                            name=\"email\"\n                            value={this.state.email}\n                            validators={['required', 'isEmail']}\n                            errorMessages={['This field is required', 'Email is not valid']}\n                        />\n                        <label htmlFor=\"button-file\">\n                            <Button variant=\"contained\" component=\"span\" className={this.classes.button}>\n                                Subir archivo\n                            </Button>\n                        </label>\n                        <input\n                            onChange={this.handleSelectedFile}\n                            accept=\"audio/*\"\n                            style={{display: 'none'}}\n                            id=\"button-file\"\n                            type=\"file\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\">\n                            Crear\n                        </Button>\n                    </DialogActions>\n                </ValidatorForm>\n            </Dialog>\n        )\n    }\n\n    renderBanner() {\n        return (\n            <Paper className={this.classes.mainFeaturedPost}>\n                <Grid container>\n                    <Grid item md={6} sm={6} xs={12}>\n                        <div className={this.classes.mainFeaturedPostContent}>\n                            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                {this.state.contest.NAME}\n                            </Typography>\n                            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                                Premio: {this.state.contest.PAYMENT}\n                            </Typography>\n                            {this.state.contest.WINNER_NAME != null ?\n                                <div>\n                                    <Typography variant=\"h6\" color=\"inherit\" paragraph>\n                                        Ganador: {this.state.contest.WINNER_NAME + \" (\" + this.state.contest.WINNER_EMAIL + \")\"}\n                                    </Typography>\n                                </div>\n                                : \"\"}\n                            <Grid container direction=\"row\" justify=\"space-between\">\n                                <a className={this.classes.link}\n                                   href={this.state.contest.SCRIPT_PATH}\n                                   target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <Button variant=\"contained\" size=\"large\" color=\"primary\">Guión/Texto</Button>\n                                </a>\n                                <a className={this.classes.link}\n                                   href={this.state.contest.RECOMMENDATIONS_PATH}\n                                   target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <Button variant=\"contained\" size=\"large\" color=\"primary\">Recomendaciones</Button>\n                                </a>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item md={6} sm={6} xs={12}>\n                        <Grid style={{height: \"100%\"}} container alignItems=\"center\" justify=\"center\">\n                            <img\n                                className={this.classes.banner}\n                                src={\n                                    this.state.contest.IMAGE_PATH ?\n                                        this.state.contest.IMAGE_PATH\n                                        : \"https://getuikit.com/v2/docs/images/placeholder_600x400.svg\"}\n                                title=\"Image title\"\n                                alt=\"Contest banner\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        )\n    }\n\n    cleanState() {\n        this.setState({\n            name: '',\n            lastName: '',\n            email: '',\n        });\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({page});\n    };\n\n    renderEntries() {\n        const {rowsPerPage, page} = this.state;\n        let rows = this.state.entries;\n        if (!this.isAdmin()) rows = rows.filter((entry) => entry.STATUS === \"Convertida\");\n        return (\n            <Grid container spacing={40}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TablePagination\n                                rowsPerPageOptions={[50]}\n                                colSpan={3}\n                                count={rows.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                onChangePage={this.handleChangePage}\n                                ActionsComponent={TablePaginationActionsWrapped}\n                                labelDisplayedRows={({from, to, count}) => `${from} a ${to} de ${count}`}\n                            />\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((entry, index) => (\n                            <TableRow key={index}>\n                                <Entry entry={entry} handleWinner={this.handleWinner} isAdmin={this.isAdmin}\n                                       winner={this.state.contest.WINNER_EMAIL}/>\n                            </TableRow>\n\n                        ))}\n                    </TableBody>\n                </Table>\n            </Grid>\n        )\n    }\n\n    renderSnackbar() {\n        let vertical = this.state.vertical;\n        let horizontal = this.state.horizontal;\n        return (\n            <Snackbar\n                anchorOrigin={{vertical, horizontal}}\n                open={this.state.openSnack}\n                onClose={this.handleCloseSnack}\n                autoHideDuration={6000}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleCloseSnack}\n                    variant=\"success\"\n                    message={<p className={this.classes.notification} id=\"message-id\">Hemos recibido tu voz y la estamos\n                        procesando para que sea publicada en la página del concurso lo más pronto posible.\n                        <br/>\n                        Cuando se encuentre lista te notificaremos por email!</p>}\n                />\n            </Snackbar>\n\n        );\n    }\n\n    renderLoading() {\n        return (\n            <Snackbar\n                open={this.state.showLoading}\n                onClose={this.handleClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                TransitionComponent={Fade}\n                message={\n\n                    <React.Fragment>\n                        <CircularProgress\n                            className={this.classes.progress}\n                            variant=\"determinate\"\n                            value={this.state.loaded}\n                        />\n                        <p>Espere un momento por favor</p>\n                    </React.Fragment>\n\n                }\n            />\n        );\n    }\n\n    handleCloseSnack = () => {\n        this.setState({openSnack: false});\n    };\n\n    isAdmin() {\n        return this.props.user ? this.props.user._id : \"\" === this.state.contest.USER_ID;\n    }\n\n    render() {\n        return (\n            <div className={this.classes.layout}>\n                {this.renderSnackbar()}\n                {this.state.contest && this.state.contest.STATUS ?\n                    <div>\n                        {this.renderBanner()}\n                        {this.state.contest.STATUS === 'ongoing' && !this.isAdmin() ?\n                            <Grid container spacing={40} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                                <Grid item xs={12} md={12}>\n                                    <Button variant=\"contained\" size=\"large\" color=\"primary\"\n                                            onClick={this.handleClickSubmitEntry}\n                                            className={this.classes.button}>\n                                        Participar en el concurso\n                                        <CloudUploadIcon className={this.classes.rightIcon}/>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            : \"\"}\n                        {this.renderLoading()}\n                        {this.renderEntries()}\n                        {this.renderSubmitDialogue()}\n                    </div>\n                    :\n                    <h4>Contest not found</h4>}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Contest);","import React, {Component} from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport {NavLink, Route, Redirect, Switch} from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Home from \"../admin/Home\";\nimport SignIn from \"./SignIn\";\nimport Contest from \"../contest/Contest\";\n\nconst linkStyle = {textDecoration: \"none\", color: \"inherit\", margin: \"0 5px\"};\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            auth: false,\n            contests: [],\n            user: null\n        };\n        this.updateAuth = this.updateAuth.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.getContests = this.getContests.bind(this);\n        this.handleUser = this.handleUser.bind(this);\n    }\n\n    /**\n     * Method that updates the current session state\n     * @param auth contains whether the user is authenticated or not\n     */\n    updateAuth(auth) {\n        this.setState({auth: auth});\n    }\n\n    /**\n     * Method to log out the user\n     */\n    handleLogout = () => {\n        let cookies = new Cookies();\n        cookies.remove(\"SUPERVOICES_TOKEN_COOKIE\", {path: '/'});\n        this.setState({auth: false, user: null});\n    };\n\n    /**\n     * Method that gets all user events by user id\n     */\n    getContests() {\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\", {path: '/'});\n        let config = {\n            headers: {'Authorization': 'Bearer ' + token}\n        };\n        axios.get('/API/contests', config)\n            .then((res) => {\n                return res.data;\n            })\n            .then((data) => {\n                this.setState({contests: data})\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    componentDidMount() {\n        this.handleUser();\n    }\n\n    handleUser() {\n        let cookies = new Cookies();\n        let token = cookies.get(\"SUPERVOICES_TOKEN_COOKIE\", {path: '/'});\n        if (token) {\n            let config = {\n                headers: {'Authorization': 'Bearer ' + token}\n            };\n            axios.get('/API/getUser', config)\n                .then((res) => {\n                    return res.data;\n                })\n                .then((data) => {\n                    this.setState({\n                        user: {\n                            name: data.name,\n                            lastname: data.lastname,\n                            email: data.email,\n                            _id: data._id,\n                        },\n                        auth: true\n                    },()=>this.getContests());\n\n                })\n                .catch((err) => {\n                    console.log(err);\n                    console.log(\"errror\")\n                    cookies.remove(\"SUPERVOICES_TOKEN_COOKIE\");\n                    this.setState({\n                        auth: false,\n                        contests: [],\n                        user: null\n                    });\n                });\n        }\n    }\n\n    render() {\n\n        return (\n\n            <div id=\"navigation\">\n                <AppBar position=\"static\" color=\"default\" style={{position: \"relative\"}}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{flex: 1}}>\n                            Super Voices\n                        </Typography>\n\n                        <NavLink exact to=\"/\" style={linkStyle}>\n                            <Button>\n                                Inicio\n                            </Button>\n                        </NavLink>\n\n                        {this.state.auth ?\n                            <Button color=\"primary\" variant=\"outlined\" onClick={this.handleLogout}>\n                                Cerrar sesión\n                            </Button>\n                            :\n                            <NavLink exact to=\"/login\" style={linkStyle}>\n                                <Button color=\"primary\" variant=\"outlined\">\n                                    Iniciar sesión\n                                </Button>\n                            </NavLink>\n                        }\n\n                    </Toolbar>\n                </AppBar>\n\n                <div className=\"content\">\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Home renderContests={this.handleUser.bind(this)}\n                                                                  contests={this.state.contests} auth={this.state.auth}\n                                                                  user={this.state.user}/>}/>\n                        <Route exact path=\"/login\"\n                               render={() => (this.state.auth ? <Redirect to='/'/> :\n                                   <SignIn handleUser={this.handleUser} updateAuth={this.updateAuth}\n                                           getContests={this.getContests}\n                                           updateComponent={this.handleUser.bind(this)}/>)}/>\n                        <Route exact path=\"/contests/:url\"\n                               render={(props) => <Contest auth={this.state.auth} user={this.state.user} {...props}/>}/>\n\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigation","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport Navigation from \"./components/other/Navigation\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0d47a1',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\n\nReactDOM.render(\n    <HashRouter>\n        <MuiThemeProvider theme={theme}>\n            <Navigation/>\n        </MuiThemeProvider>\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}